
tP.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  00000eda  00000f4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000eda  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000f6e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fcc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000118  00000000  00000000  0000100c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000017b3  00000000  00000000  00001124  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a38  00000000  00000000  000028d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a99  00000000  00000000  0000330f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000370  00000000  00000000  00003da8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000071e  00000000  00000000  00004118  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b0c  00000000  00000000  00004836  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e8  00000000  00000000  00005342  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea ed       	ldi	r30, 0xDA	; 218
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 32       	cpi	r26, 0x20	; 32
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e2       	ldi	r26, 0x20	; 32
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 32       	cpi	r26, 0x20	; 32
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 6b 07 	jmp	0xed6	; 0xed6 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
unsigned char valor;
#include <avr/eeprom.h>
// Dirección en la EEPROM donde se almacenará el carácter
#define EEPROM_ADDR 0 
int main(void)
{
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	cd b7       	in	r28, 0x3d	; 61
  ac:	de b7       	in	r29, 0x3e	; 62
  ae:	60 97       	sbiw	r28, 0x10	; 16
  b0:	0f b6       	in	r0, 0x3f	; 63
  b2:	f8 94       	cli
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	0f be       	out	0x3f, r0	; 63
  b8:	cd bf       	out	0x3d, r28	; 61
	while(1){
		ImprimirTemperatura();
  ba:	0e 94 ae 01 	call	0x35c	; 0x35c <ImprimirTemperatura>
		int pepis=LeerTemperatura();
  be:	0e 94 2f 02 	call	0x45e	; 0x45e <LeerTemperatura>
		char pepi[16];
		sprintf(pepi, "%d", pepis); // Convierte el entero a una cadena
  c2:	9f 93       	push	r25
  c4:	8f 93       	push	r24
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	91 e0       	ldi	r25, 0x01	; 1
  ca:	9f 93       	push	r25
  cc:	8f 93       	push	r24
  ce:	8e 01       	movw	r16, r28
  d0:	0f 5f       	subi	r16, 0xFF	; 255
  d2:	1f 4f       	sbci	r17, 0xFF	; 255
  d4:	1f 93       	push	r17
  d6:	0f 93       	push	r16
  d8:	0e 94 81 04 	call	0x902	; 0x902 <sprintf>
		uart_send_string("pepi: ");
  dc:	83 e0       	ldi	r24, 0x03	; 3
  de:	91 e0       	ldi	r25, 0x01	; 1
  e0:	0e 94 a9 02 	call	0x552	; 0x552 <uart_send_string>
		uart_send_string(pepi);
  e4:	c8 01       	movw	r24, r16
  e6:	0e 94 a9 02 	call	0x552	; 0x552 <uart_send_string>
  ea:	0f 90       	pop	r0
  ec:	0f 90       	pop	r0
  ee:	0f 90       	pop	r0
  f0:	0f 90       	pop	r0
  f2:	0f 90       	pop	r0
  f4:	0f 90       	pop	r0
  f6:	e1 cf       	rjmp	.-62     	; 0xba <main+0x14>

000000f8 <i2c_read>:
uint16_t mcp_read_temp()
{    
    uint16_t temp;
    i2c_read(MCP_TEMP, (uint8_t*) &temp, 2);
    return temp;
}
  f8:	94 ea       	ldi	r25, 0xA4	; 164
  fa:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
  fe:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 102:	99 23       	and	r25, r25
 104:	e4 f7       	brge	.-8      	; 0xfe <i2c_read+0x6>
 106:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 10a:	9b 7f       	andi	r25, 0xFB	; 251
 10c:	98 30       	cpi	r25, 0x08	; 8
 10e:	09 f0       	breq	.+2      	; 0x112 <i2c_read+0x1a>
 110:	57 c0       	rjmp	.+174    	; 0x1c0 <i2c_read+0xc8>
 112:	90 e9       	ldi	r25, 0x90	; 144
 114:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 118:	94 e8       	ldi	r25, 0x84	; 132
 11a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 11e:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 122:	99 23       	and	r25, r25
 124:	e4 f7       	brge	.-8      	; 0x11e <i2c_read+0x26>
 126:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 12a:	9b 7f       	andi	r25, 0xFB	; 251
 12c:	98 31       	cpi	r25, 0x18	; 24
 12e:	09 f0       	breq	.+2      	; 0x132 <i2c_read+0x3a>
 130:	47 c0       	rjmp	.+142    	; 0x1c0 <i2c_read+0xc8>
 132:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 136:	84 e8       	ldi	r24, 0x84	; 132
 138:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 13c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 140:	88 23       	and	r24, r24
 142:	e4 f7       	brge	.-8      	; 0x13c <i2c_read+0x44>
 144:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 148:	8b 7f       	andi	r24, 0xFB	; 251
 14a:	88 32       	cpi	r24, 0x28	; 40
 14c:	c9 f5       	brne	.+114    	; 0x1c0 <i2c_read+0xc8>
 14e:	84 ea       	ldi	r24, 0xA4	; 164
 150:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 154:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 158:	88 23       	and	r24, r24
 15a:	e4 f7       	brge	.-8      	; 0x154 <i2c_read+0x5c>
 15c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 160:	8b 7f       	andi	r24, 0xFB	; 251
 162:	80 31       	cpi	r24, 0x10	; 16
 164:	69 f5       	brne	.+90     	; 0x1c0 <i2c_read+0xc8>
 166:	81 e9       	ldi	r24, 0x91	; 145
 168:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 16c:	84 e8       	ldi	r24, 0x84	; 132
 16e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 172:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 176:	88 23       	and	r24, r24
 178:	e4 f7       	brge	.-8      	; 0x172 <i2c_read+0x7a>
 17a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 17e:	8b 7f       	andi	r24, 0xFB	; 251
 180:	80 34       	cpi	r24, 0x40	; 64
 182:	f1 f4       	brne	.+60     	; 0x1c0 <i2c_read+0xc8>
 184:	15 c0       	rjmp	.+42     	; 0x1b0 <i2c_read+0xb8>
 186:	21 15       	cp	r18, r1
 188:	31 05       	cpc	r19, r1
 18a:	21 f4       	brne	.+8      	; 0x194 <i2c_read+0x9c>
 18c:	84 e8       	ldi	r24, 0x84	; 132
 18e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 192:	03 c0       	rjmp	.+6      	; 0x19a <i2c_read+0xa2>
 194:	84 ec       	ldi	r24, 0xC4	; 196
 196:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 19a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 19e:	88 23       	and	r24, r24
 1a0:	e4 f7       	brge	.-8      	; 0x19a <i2c_read+0xa2>
 1a2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 1a6:	fb 01       	movw	r30, r22
 1a8:	80 83       	st	Z, r24
 1aa:	a9 01       	movw	r20, r18
 1ac:	6f 5f       	subi	r22, 0xFF	; 255
 1ae:	7f 4f       	sbci	r23, 0xFF	; 255
 1b0:	9a 01       	movw	r18, r20
 1b2:	21 50       	subi	r18, 0x01	; 1
 1b4:	31 09       	sbc	r19, r1
 1b6:	45 2b       	or	r20, r21
 1b8:	31 f7       	brne	.-52     	; 0x186 <i2c_read+0x8e>
 1ba:	84 e9       	ldi	r24, 0x94	; 148
 1bc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1c0:	08 95       	ret

000001c2 <i2c_wwrite>:
 1c2:	94 ea       	ldi	r25, 0xA4	; 164
 1c4:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1c8:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1cc:	99 23       	and	r25, r25
 1ce:	e4 f7       	brge	.-8      	; 0x1c8 <i2c_wwrite+0x6>
 1d0:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 1d4:	9b 7f       	andi	r25, 0xFB	; 251
 1d6:	98 30       	cpi	r25, 0x08	; 8
 1d8:	d1 f5       	brne	.+116    	; 0x24e <i2c_wwrite+0x8c>
 1da:	90 e9       	ldi	r25, 0x90	; 144
 1dc:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 1e0:	94 e8       	ldi	r25, 0x84	; 132
 1e2:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1e6:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 1ea:	99 23       	and	r25, r25
 1ec:	e4 f7       	brge	.-8      	; 0x1e6 <i2c_wwrite+0x24>
 1ee:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 1f2:	9b 7f       	andi	r25, 0xFB	; 251
 1f4:	98 31       	cpi	r25, 0x18	; 24
 1f6:	59 f5       	brne	.+86     	; 0x24e <i2c_wwrite+0x8c>
 1f8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 1fc:	84 e8       	ldi	r24, 0x84	; 132
 1fe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 202:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 206:	88 23       	and	r24, r24
 208:	e4 f7       	brge	.-8      	; 0x202 <i2c_wwrite+0x40>
 20a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 20e:	8b 7f       	andi	r24, 0xFB	; 251
 210:	88 32       	cpi	r24, 0x28	; 40
 212:	e9 f4       	brne	.+58     	; 0x24e <i2c_wwrite+0x8c>
 214:	14 c0       	rjmp	.+40     	; 0x23e <i2c_wwrite+0x7c>
 216:	fb 01       	movw	r30, r22
 218:	31 96       	adiw	r30, 0x01	; 1
 21a:	db 01       	movw	r26, r22
 21c:	8c 91       	ld	r24, X
 21e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 222:	84 e8       	ldi	r24, 0x84	; 132
 224:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 228:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 22c:	88 23       	and	r24, r24
 22e:	e4 f7       	brge	.-8      	; 0x228 <i2c_wwrite+0x66>
 230:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 234:	a9 01       	movw	r20, r18
 236:	8b 7f       	andi	r24, 0xFB	; 251
 238:	88 32       	cpi	r24, 0x28	; 40
 23a:	49 f4       	brne	.+18     	; 0x24e <i2c_wwrite+0x8c>
 23c:	bf 01       	movw	r22, r30
 23e:	9a 01       	movw	r18, r20
 240:	21 50       	subi	r18, 0x01	; 1
 242:	31 09       	sbc	r19, r1
 244:	45 2b       	or	r20, r21
 246:	39 f7       	brne	.-50     	; 0x216 <i2c_wwrite+0x54>
 248:	84 e9       	ldi	r24, 0x94	; 148
 24a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 24e:	08 95       	ret

00000250 <mcp_set_adc_resolution>:
 250:	1f 93       	push	r17
 252:	cf 93       	push	r28
 254:	df 93       	push	r29
 256:	1f 92       	push	r1
 258:	cd b7       	in	r28, 0x3d	; 61
 25a:	de b7       	in	r29, 0x3e	; 62
 25c:	18 2f       	mov	r17, r24
 25e:	41 e0       	ldi	r20, 0x01	; 1
 260:	50 e0       	ldi	r21, 0x00	; 0
 262:	be 01       	movw	r22, r28
 264:	6f 5f       	subi	r22, 0xFF	; 255
 266:	7f 4f       	sbci	r23, 0xFF	; 255
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	0e 94 7c 00 	call	0xf8	; 0xf8 <i2c_read>
 26e:	89 81       	ldd	r24, Y+1	; 0x01
 270:	28 2f       	mov	r18, r24
 272:	2f 79       	andi	r18, 0x9F	; 159
 274:	30 e2       	ldi	r19, 0x20	; 32
 276:	13 9f       	mul	r17, r19
 278:	c0 01       	movw	r24, r0
 27a:	11 24       	eor	r1, r1
 27c:	82 2b       	or	r24, r18
 27e:	89 83       	std	Y+1, r24	; 0x01
 280:	41 e0       	ldi	r20, 0x01	; 1
 282:	50 e0       	ldi	r21, 0x00	; 0
 284:	be 01       	movw	r22, r28
 286:	6f 5f       	subi	r22, 0xFF	; 255
 288:	7f 4f       	sbci	r23, 0xFF	; 255
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <i2c_wwrite>
 290:	0f 90       	pop	r0
 292:	df 91       	pop	r29
 294:	cf 91       	pop	r28
 296:	1f 91       	pop	r17
 298:	08 95       	ret

0000029a <mcp_set_power_mode>:
 29a:	1f 93       	push	r17
 29c:	cf 93       	push	r28
 29e:	df 93       	push	r29
 2a0:	1f 92       	push	r1
 2a2:	cd b7       	in	r28, 0x3d	; 61
 2a4:	de b7       	in	r29, 0x3e	; 62
 2a6:	18 2f       	mov	r17, r24
 2a8:	41 e0       	ldi	r20, 0x01	; 1
 2aa:	50 e0       	ldi	r21, 0x00	; 0
 2ac:	be 01       	movw	r22, r28
 2ae:	6f 5f       	subi	r22, 0xFF	; 255
 2b0:	7f 4f       	sbci	r23, 0xFF	; 255
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	0e 94 7c 00 	call	0xf8	; 0xf8 <i2c_read>
 2b8:	89 81       	ldd	r24, Y+1	; 0x01
 2ba:	8e 7f       	andi	r24, 0xFE	; 254
 2bc:	18 2b       	or	r17, r24
 2be:	19 83       	std	Y+1, r17	; 0x01
 2c0:	41 e0       	ldi	r20, 0x01	; 1
 2c2:	50 e0       	ldi	r21, 0x00	; 0
 2c4:	be 01       	movw	r22, r28
 2c6:	6f 5f       	subi	r22, 0xFF	; 255
 2c8:	7f 4f       	sbci	r23, 0xFF	; 255
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <i2c_wwrite>
 2d0:	0f 90       	pop	r0
 2d2:	df 91       	pop	r29
 2d4:	cf 91       	pop	r28
 2d6:	1f 91       	pop	r17
 2d8:	08 95       	ret

000002da <mcp_read_temp_float>:

float mcp_read_temp_float()
{    
 2da:	ef 92       	push	r14
 2dc:	ff 92       	push	r15
 2de:	1f 93       	push	r17
 2e0:	cf 93       	push	r28
 2e2:	df 93       	push	r29
 2e4:	00 d0       	rcall	.+0      	; 0x2e6 <mcp_read_temp_float+0xc>
 2e6:	cd b7       	in	r28, 0x3d	; 61
 2e8:	de b7       	in	r29, 0x3e	; 62
    uint16_t temp;
    i2c_read(MCP_TEMP, (uint8_t*) &temp, 2);
 2ea:	42 e0       	ldi	r20, 0x02	; 2
 2ec:	50 e0       	ldi	r21, 0x00	; 0
 2ee:	be 01       	movw	r22, r28
 2f0:	6f 5f       	subi	r22, 0xFF	; 255
 2f2:	7f 4f       	sbci	r23, 0xFF	; 255
 2f4:	80 e0       	ldi	r24, 0x00	; 0
 2f6:	0e 94 7c 00 	call	0xf8	; 0xf8 <i2c_read>
    float t = temp & 0x00ff;
 2fa:	e9 80       	ldd	r14, Y+1	; 0x01
 2fc:	fa 80       	ldd	r15, Y+2	; 0x02
 2fe:	b7 01       	movw	r22, r14
 300:	77 27       	eor	r23, r23
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	0e 94 60 03 	call	0x6c0	; 0x6c0 <__floatunsisf>
    int frac = (temp>>8);
 30a:	1f 2d       	mov	r17, r15
    if (frac & 0x80) {
 30c:	f7 fe       	sbrs	r15, 7
 30e:	06 c0       	rjmp	.+12     	; 0x31c <mcp_read_temp_float+0x42>
        t+=0.5f;
 310:	20 e0       	ldi	r18, 0x00	; 0
 312:	30 e0       	ldi	r19, 0x00	; 0
 314:	40 e0       	ldi	r20, 0x00	; 0
 316:	5f e3       	ldi	r21, 0x3F	; 63
 318:	0e 94 be 02 	call	0x57c	; 0x57c <__addsf3>
    }
    if (frac& 0x40) {
 31c:	16 ff       	sbrs	r17, 6
 31e:	06 c0       	rjmp	.+12     	; 0x32c <mcp_read_temp_float+0x52>
        t+=0.25f;
 320:	20 e0       	ldi	r18, 0x00	; 0
 322:	30 e0       	ldi	r19, 0x00	; 0
 324:	40 e8       	ldi	r20, 0x80	; 128
 326:	5e e3       	ldi	r21, 0x3E	; 62
 328:	0e 94 be 02 	call	0x57c	; 0x57c <__addsf3>
    }
    if (frac&0x20) {
 32c:	15 ff       	sbrs	r17, 5
 32e:	06 c0       	rjmp	.+12     	; 0x33c <mcp_read_temp_float+0x62>
        t+=0.125f;
 330:	20 e0       	ldi	r18, 0x00	; 0
 332:	30 e0       	ldi	r19, 0x00	; 0
 334:	40 e0       	ldi	r20, 0x00	; 0
 336:	5e e3       	ldi	r21, 0x3E	; 62
 338:	0e 94 be 02 	call	0x57c	; 0x57c <__addsf3>
    }
    if (frac&0x10) {
 33c:	14 ff       	sbrs	r17, 4
 33e:	06 c0       	rjmp	.+12     	; 0x34c <mcp_read_temp_float+0x72>
        t+=0.0625f;
 340:	20 e0       	ldi	r18, 0x00	; 0
 342:	30 e0       	ldi	r19, 0x00	; 0
 344:	40 e8       	ldi	r20, 0x80	; 128
 346:	5d e3       	ldi	r21, 0x3D	; 61
 348:	0e 94 be 02 	call	0x57c	; 0x57c <__addsf3>
    }
    return t;
}
 34c:	0f 90       	pop	r0
 34e:	0f 90       	pop	r0
 350:	df 91       	pop	r29
 352:	cf 91       	pop	r28
 354:	1f 91       	pop	r17
 356:	ff 90       	pop	r15
 358:	ef 90       	pop	r14
 35a:	08 95       	ret

0000035c <ImprimirTemperatura>:
void ImprimirTemperatura(void){
 35c:	8f 92       	push	r8
 35e:	9f 92       	push	r9
 360:	af 92       	push	r10
 362:	bf 92       	push	r11
 364:	cf 92       	push	r12
 366:	df 92       	push	r13
 368:	ef 92       	push	r14
 36a:	ff 92       	push	r15
 36c:	0f 93       	push	r16
 36e:	1f 93       	push	r17
 370:	cf 93       	push	r28
 372:	df 93       	push	r29
 374:	cd b7       	in	r28, 0x3d	; 61
 376:	de b7       	in	r29, 0x3e	; 62
 378:	aa 97       	sbiw	r28, 0x2a	; 42
 37a:	0f b6       	in	r0, 0x3f	; 63
 37c:	f8 94       	cli
 37e:	de bf       	out	0x3e, r29	; 62
 380:	0f be       	out	0x3f, r0	; 63
 382:	cd bf       	out	0x3d, r28	; 61
	char buf[32];
	uart_init();
 384:	0e 94 96 02 	call	0x52c	; 0x52c <uart_init>
	//init MCP9800 sensor
	mcp_init();
	mcp_set_adc_resolution(MCP_ADC_RES_12);
 388:	83 e0       	ldi	r24, 0x03	; 3
 38a:	0e 94 28 01 	call	0x250	; 0x250 <mcp_set_adc_resolution>
	mcp_set_power_mode(MCP_POWER_UP);
 38e:	80 e0       	ldi	r24, 0x00	; 0
 390:	0e 94 4d 01 	call	0x29a	; 0x29a <mcp_set_power_mode>
	float temp = mcp_read_temp_float();
 394:	0e 94 6d 01 	call	0x2da	; 0x2da <mcp_read_temp_float>
 398:	4b 01       	movw	r8, r22
 39a:	5c 01       	movw	r10, r24
	int temp_whole = (int)temp; // Extract whole number part
 39c:	0e 94 2a 03 	call	0x654	; 0x654 <__fixsfsi>
 3a0:	6b 01       	movw	r12, r22
 3a2:	7c 01       	movw	r14, r24
	int temp_frac = (int)((temp - temp_whole) * 10000); // Extract fractional part with desired precision
 3a4:	07 2e       	mov	r0, r23
 3a6:	00 0c       	add	r0, r0
 3a8:	88 0b       	sbc	r24, r24
 3aa:	99 0b       	sbc	r25, r25
 3ac:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__floatsisf>
 3b0:	9b 01       	movw	r18, r22
 3b2:	ac 01       	movw	r20, r24
 3b4:	c5 01       	movw	r24, r10
 3b6:	b4 01       	movw	r22, r8
 3b8:	0e 94 bd 02 	call	0x57a	; 0x57a <__subsf3>
 3bc:	20 e0       	ldi	r18, 0x00	; 0
 3be:	30 e4       	ldi	r19, 0x40	; 64
 3c0:	4c e1       	ldi	r20, 0x1C	; 28
 3c2:	56 e4       	ldi	r21, 0x46	; 70
 3c4:	0e 94 ee 03 	call	0x7dc	; 0x7dc <__mulsf3>
 3c8:	0e 94 2a 03 	call	0x654	; 0x654 <__fixsfsi>
 3cc:	9b 01       	movw	r18, r22
	if(temp_frac < 0) temp_frac = -temp_frac; // Ensure the fractional part is positive
 3ce:	77 23       	and	r23, r23
 3d0:	24 f4       	brge	.+8      	; 0x3da <ImprimirTemperatura+0x7e>
 3d2:	22 27       	eor	r18, r18
 3d4:	33 27       	eor	r19, r19
 3d6:	26 1b       	sub	r18, r22
 3d8:	37 0b       	sbc	r19, r23
	// Now print both parts separately
	sprintf(buf, "%d.%04d", temp_whole, temp_frac);
 3da:	3f 93       	push	r19
 3dc:	2f 93       	push	r18
 3de:	df 92       	push	r13
 3e0:	cf 92       	push	r12
 3e2:	8a e0       	ldi	r24, 0x0A	; 10
 3e4:	91 e0       	ldi	r25, 0x01	; 1
 3e6:	9f 93       	push	r25
 3e8:	8f 93       	push	r24
 3ea:	8e 01       	movw	r16, r28
 3ec:	0f 5f       	subi	r16, 0xFF	; 255
 3ee:	1f 4f       	sbci	r17, 0xFF	; 255
 3f0:	1f 93       	push	r17
 3f2:	0f 93       	push	r16
 3f4:	0e 94 81 04 	call	0x902	; 0x902 <sprintf>
	// Send the temperature string over UART
	uart_send_string("Temperatura: ");
 3f8:	82 e1       	ldi	r24, 0x12	; 18
 3fa:	91 e0       	ldi	r25, 0x01	; 1
 3fc:	0e 94 a9 02 	call	0x552	; 0x552 <uart_send_string>
	uart_send_string(buf);
 400:	c8 01       	movw	r24, r16
 402:	0e 94 a9 02 	call	0x552	; 0x552 <uart_send_string>
	uart_send_newline();
 406:	0e 94 b6 02 	call	0x56c	; 0x56c <uart_send_newline>
	// Convert the formatted string to an integer
	int MedicionTemperatura = atoi(buf);
 40a:	c8 01       	movw	r24, r16
 40c:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <atoi>
	char buffer[10]; // Espacio para la cadena de caracteres
	sprintf(buffer, "%d", MedicionTemperatura); // Convierte el entero a una cadena
 410:	9f 93       	push	r25
 412:	8f 93       	push	r24
 414:	80 e0       	ldi	r24, 0x00	; 0
 416:	91 e0       	ldi	r25, 0x01	; 1
 418:	9f 93       	push	r25
 41a:	8f 93       	push	r24
 41c:	00 5e       	subi	r16, 0xE0	; 224
 41e:	1f 4f       	sbci	r17, 0xFF	; 255
 420:	1f 93       	push	r17
 422:	0f 93       	push	r16
 424:	0e 94 81 04 	call	0x902	; 0x902 <sprintf>
	uart_send_string(buffer);
 428:	c8 01       	movw	r24, r16
 42a:	0e 94 a9 02 	call	0x552	; 0x552 <uart_send_string>
	;
};
 42e:	0f b6       	in	r0, 0x3f	; 63
 430:	f8 94       	cli
 432:	de bf       	out	0x3e, r29	; 62
 434:	0f be       	out	0x3f, r0	; 63
 436:	cd bf       	out	0x3d, r28	; 61
 438:	aa 96       	adiw	r28, 0x2a	; 42
 43a:	0f b6       	in	r0, 0x3f	; 63
 43c:	f8 94       	cli
 43e:	de bf       	out	0x3e, r29	; 62
 440:	0f be       	out	0x3f, r0	; 63
 442:	cd bf       	out	0x3d, r28	; 61
 444:	df 91       	pop	r29
 446:	cf 91       	pop	r28
 448:	1f 91       	pop	r17
 44a:	0f 91       	pop	r16
 44c:	ff 90       	pop	r15
 44e:	ef 90       	pop	r14
 450:	df 90       	pop	r13
 452:	cf 90       	pop	r12
 454:	bf 90       	pop	r11
 456:	af 90       	pop	r10
 458:	9f 90       	pop	r9
 45a:	8f 90       	pop	r8
 45c:	08 95       	ret

0000045e <LeerTemperatura>:
int LeerTemperatura(void){
 45e:	8f 92       	push	r8
 460:	9f 92       	push	r9
 462:	af 92       	push	r10
 464:	bf 92       	push	r11
 466:	cf 92       	push	r12
 468:	df 92       	push	r13
 46a:	ef 92       	push	r14
 46c:	ff 92       	push	r15
 46e:	0f 93       	push	r16
 470:	1f 93       	push	r17
 472:	cf 93       	push	r28
 474:	df 93       	push	r29
 476:	cd b7       	in	r28, 0x3d	; 61
 478:	de b7       	in	r29, 0x3e	; 62
 47a:	a0 97       	sbiw	r28, 0x20	; 32
 47c:	0f b6       	in	r0, 0x3f	; 63
 47e:	f8 94       	cli
 480:	de bf       	out	0x3e, r29	; 62
 482:	0f be       	out	0x3f, r0	; 63
 484:	cd bf       	out	0x3d, r28	; 61
	char buf[32];
	mcp_init();
	mcp_set_adc_resolution(MCP_ADC_RES_12);
 486:	83 e0       	ldi	r24, 0x03	; 3
 488:	0e 94 28 01 	call	0x250	; 0x250 <mcp_set_adc_resolution>
	mcp_set_power_mode(MCP_POWER_UP);
 48c:	80 e0       	ldi	r24, 0x00	; 0
 48e:	0e 94 4d 01 	call	0x29a	; 0x29a <mcp_set_power_mode>
	float temp = mcp_read_temp_float();
 492:	0e 94 6d 01 	call	0x2da	; 0x2da <mcp_read_temp_float>
 496:	4b 01       	movw	r8, r22
 498:	5c 01       	movw	r10, r24
	int temp_whole = (int)temp; // Extract whole number part
 49a:	0e 94 2a 03 	call	0x654	; 0x654 <__fixsfsi>
 49e:	6b 01       	movw	r12, r22
 4a0:	7c 01       	movw	r14, r24
	int temp_frac = (int)((temp - temp_whole) * 10000); // Extract fractional part with desired precision
 4a2:	07 2e       	mov	r0, r23
 4a4:	00 0c       	add	r0, r0
 4a6:	88 0b       	sbc	r24, r24
 4a8:	99 0b       	sbc	r25, r25
 4aa:	0e 94 62 03 	call	0x6c4	; 0x6c4 <__floatsisf>
 4ae:	9b 01       	movw	r18, r22
 4b0:	ac 01       	movw	r20, r24
 4b2:	c5 01       	movw	r24, r10
 4b4:	b4 01       	movw	r22, r8
 4b6:	0e 94 bd 02 	call	0x57a	; 0x57a <__subsf3>
 4ba:	20 e0       	ldi	r18, 0x00	; 0
 4bc:	30 e4       	ldi	r19, 0x40	; 64
 4be:	4c e1       	ldi	r20, 0x1C	; 28
 4c0:	56 e4       	ldi	r21, 0x46	; 70
 4c2:	0e 94 ee 03 	call	0x7dc	; 0x7dc <__mulsf3>
 4c6:	0e 94 2a 03 	call	0x654	; 0x654 <__fixsfsi>
 4ca:	9b 01       	movw	r18, r22
	if(temp_frac < 0) temp_frac = -temp_frac; // Ensure the fractional part is positive
 4cc:	77 23       	and	r23, r23
 4ce:	24 f4       	brge	.+8      	; 0x4d8 <LeerTemperatura+0x7a>
 4d0:	22 27       	eor	r18, r18
 4d2:	33 27       	eor	r19, r19
 4d4:	26 1b       	sub	r18, r22
 4d6:	37 0b       	sbc	r19, r23
	// Now print both parts separately
	sprintf(buf, "%d.%04d", temp_whole, temp_frac);
 4d8:	3f 93       	push	r19
 4da:	2f 93       	push	r18
 4dc:	df 92       	push	r13
 4de:	cf 92       	push	r12
 4e0:	8a e0       	ldi	r24, 0x0A	; 10
 4e2:	91 e0       	ldi	r25, 0x01	; 1
 4e4:	9f 93       	push	r25
 4e6:	8f 93       	push	r24
 4e8:	8e 01       	movw	r16, r28
 4ea:	0f 5f       	subi	r16, 0xFF	; 255
 4ec:	1f 4f       	sbci	r17, 0xFF	; 255
 4ee:	1f 93       	push	r17
 4f0:	0f 93       	push	r16
 4f2:	0e 94 81 04 	call	0x902	; 0x902 <sprintf>
	int MedicionTemperatura = atoi(buf);
 4f6:	c8 01       	movw	r24, r16
 4f8:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <atoi>
    return MedicionTemperatura;
 4fc:	0f b6       	in	r0, 0x3f	; 63
 4fe:	f8 94       	cli
 500:	de bf       	out	0x3e, r29	; 62
 502:	0f be       	out	0x3f, r0	; 63
 504:	cd bf       	out	0x3d, r28	; 61
 506:	a0 96       	adiw	r28, 0x20	; 32
 508:	0f b6       	in	r0, 0x3f	; 63
 50a:	f8 94       	cli
 50c:	de bf       	out	0x3e, r29	; 62
 50e:	0f be       	out	0x3f, r0	; 63
 510:	cd bf       	out	0x3d, r28	; 61
 512:	df 91       	pop	r29
 514:	cf 91       	pop	r28
 516:	1f 91       	pop	r17
 518:	0f 91       	pop	r16
 51a:	ff 90       	pop	r15
 51c:	ef 90       	pop	r14
 51e:	df 90       	pop	r13
 520:	cf 90       	pop	r12
 522:	bf 90       	pop	r11
 524:	af 90       	pop	r10
 526:	9f 90       	pop	r9
 528:	8f 90       	pop	r8
 52a:	08 95       	ret

0000052c <uart_init>:

#include "UART.h"
void uart_init() {
	// Configurar la velocidad de transmisión a 9600
	UBRR0H = 0;
 52c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = 103;
 530:	87 e6       	ldi	r24, 0x67	; 103
 532:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>

	// Habilitar el transmisor y el receptor
	UCSR0B = (1 << TXEN0) | (1 << RXEN0);
 536:	88 e1       	ldi	r24, 0x18	; 24
 538:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>

	// Configurar el formato del trama: 8 bits de datos, 1 bit de parada
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
 53c:	86 e0       	ldi	r24, 0x06	; 6
 53e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 542:	08 95       	ret

00000544 <uart_send_char>:
}

// Enviar un solo carácter por la UART
void uart_send_char(char c) {
	while (!(UCSR0A & (1 << UDRE0))); // Esperar hasta que el buffer esté vacío
 544:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 548:	95 ff       	sbrs	r25, 5
 54a:	fc cf       	rjmp	.-8      	; 0x544 <uart_send_char>
	UDR0 = c;
 54c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 550:	08 95       	ret

00000552 <uart_send_string>:
}

// Enviar una cadena (texto) terminada en nulo por la UART
void uart_send_string(const char* str) {
 552:	cf 93       	push	r28
 554:	df 93       	push	r29
 556:	ec 01       	movw	r28, r24
	while (*str) {
 558:	03 c0       	rjmp	.+6      	; 0x560 <uart_send_string+0xe>
		uart_send_char(*str);
 55a:	0e 94 a2 02 	call	0x544	; 0x544 <uart_send_char>
		str++;
 55e:	21 96       	adiw	r28, 0x01	; 1
	UDR0 = c;
}

// Enviar una cadena (texto) terminada en nulo por la UART
void uart_send_string(const char* str) {
	while (*str) {
 560:	88 81       	ld	r24, Y
 562:	81 11       	cpse	r24, r1
 564:	fa cf       	rjmp	.-12     	; 0x55a <uart_send_string+0x8>
		uart_send_char(*str);
		str++;
	}
}
 566:	df 91       	pop	r29
 568:	cf 91       	pop	r28
 56a:	08 95       	ret

0000056c <uart_send_newline>:

// Enviar un carácter de salto de línea por la UART
void uart_send_newline() {
	uart_send_char(13);
 56c:	8d e0       	ldi	r24, 0x0D	; 13
 56e:	0e 94 a2 02 	call	0x544	; 0x544 <uart_send_char>
	uart_send_char(10);
 572:	8a e0       	ldi	r24, 0x0A	; 10
 574:	0e 94 a2 02 	call	0x544	; 0x544 <uart_send_char>
 578:	08 95       	ret

0000057a <__subsf3>:
 57a:	50 58       	subi	r21, 0x80	; 128

0000057c <__addsf3>:
 57c:	bb 27       	eor	r27, r27
 57e:	aa 27       	eor	r26, r26
 580:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__addsf3x>
 584:	0c 94 b4 03 	jmp	0x768	; 0x768 <__fp_round>
 588:	0e 94 a6 03 	call	0x74c	; 0x74c <__fp_pscA>
 58c:	38 f0       	brcs	.+14     	; 0x59c <__addsf3+0x20>
 58e:	0e 94 ad 03 	call	0x75a	; 0x75a <__fp_pscB>
 592:	20 f0       	brcs	.+8      	; 0x59c <__addsf3+0x20>
 594:	39 f4       	brne	.+14     	; 0x5a4 <__addsf3+0x28>
 596:	9f 3f       	cpi	r25, 0xFF	; 255
 598:	19 f4       	brne	.+6      	; 0x5a0 <__addsf3+0x24>
 59a:	26 f4       	brtc	.+8      	; 0x5a4 <__addsf3+0x28>
 59c:	0c 94 a3 03 	jmp	0x746	; 0x746 <__fp_nan>
 5a0:	0e f4       	brtc	.+2      	; 0x5a4 <__addsf3+0x28>
 5a2:	e0 95       	com	r30
 5a4:	e7 fb       	bst	r30, 7
 5a6:	0c 94 9d 03 	jmp	0x73a	; 0x73a <__fp_inf>

000005aa <__addsf3x>:
 5aa:	e9 2f       	mov	r30, r25
 5ac:	0e 94 c5 03 	call	0x78a	; 0x78a <__fp_split3>
 5b0:	58 f3       	brcs	.-42     	; 0x588 <__addsf3+0xc>
 5b2:	ba 17       	cp	r27, r26
 5b4:	62 07       	cpc	r22, r18
 5b6:	73 07       	cpc	r23, r19
 5b8:	84 07       	cpc	r24, r20
 5ba:	95 07       	cpc	r25, r21
 5bc:	20 f0       	brcs	.+8      	; 0x5c6 <__addsf3x+0x1c>
 5be:	79 f4       	brne	.+30     	; 0x5de <__addsf3x+0x34>
 5c0:	a6 f5       	brtc	.+104    	; 0x62a <__addsf3x+0x80>
 5c2:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__fp_zero>
 5c6:	0e f4       	brtc	.+2      	; 0x5ca <__addsf3x+0x20>
 5c8:	e0 95       	com	r30
 5ca:	0b 2e       	mov	r0, r27
 5cc:	ba 2f       	mov	r27, r26
 5ce:	a0 2d       	mov	r26, r0
 5d0:	0b 01       	movw	r0, r22
 5d2:	b9 01       	movw	r22, r18
 5d4:	90 01       	movw	r18, r0
 5d6:	0c 01       	movw	r0, r24
 5d8:	ca 01       	movw	r24, r20
 5da:	a0 01       	movw	r20, r0
 5dc:	11 24       	eor	r1, r1
 5de:	ff 27       	eor	r31, r31
 5e0:	59 1b       	sub	r21, r25
 5e2:	99 f0       	breq	.+38     	; 0x60a <__addsf3x+0x60>
 5e4:	59 3f       	cpi	r21, 0xF9	; 249
 5e6:	50 f4       	brcc	.+20     	; 0x5fc <__addsf3x+0x52>
 5e8:	50 3e       	cpi	r21, 0xE0	; 224
 5ea:	68 f1       	brcs	.+90     	; 0x646 <__addsf3x+0x9c>
 5ec:	1a 16       	cp	r1, r26
 5ee:	f0 40       	sbci	r31, 0x00	; 0
 5f0:	a2 2f       	mov	r26, r18
 5f2:	23 2f       	mov	r18, r19
 5f4:	34 2f       	mov	r19, r20
 5f6:	44 27       	eor	r20, r20
 5f8:	58 5f       	subi	r21, 0xF8	; 248
 5fa:	f3 cf       	rjmp	.-26     	; 0x5e2 <__addsf3x+0x38>
 5fc:	46 95       	lsr	r20
 5fe:	37 95       	ror	r19
 600:	27 95       	ror	r18
 602:	a7 95       	ror	r26
 604:	f0 40       	sbci	r31, 0x00	; 0
 606:	53 95       	inc	r21
 608:	c9 f7       	brne	.-14     	; 0x5fc <__addsf3x+0x52>
 60a:	7e f4       	brtc	.+30     	; 0x62a <__addsf3x+0x80>
 60c:	1f 16       	cp	r1, r31
 60e:	ba 0b       	sbc	r27, r26
 610:	62 0b       	sbc	r22, r18
 612:	73 0b       	sbc	r23, r19
 614:	84 0b       	sbc	r24, r20
 616:	ba f0       	brmi	.+46     	; 0x646 <__addsf3x+0x9c>
 618:	91 50       	subi	r25, 0x01	; 1
 61a:	a1 f0       	breq	.+40     	; 0x644 <__addsf3x+0x9a>
 61c:	ff 0f       	add	r31, r31
 61e:	bb 1f       	adc	r27, r27
 620:	66 1f       	adc	r22, r22
 622:	77 1f       	adc	r23, r23
 624:	88 1f       	adc	r24, r24
 626:	c2 f7       	brpl	.-16     	; 0x618 <__addsf3x+0x6e>
 628:	0e c0       	rjmp	.+28     	; 0x646 <__addsf3x+0x9c>
 62a:	ba 0f       	add	r27, r26
 62c:	62 1f       	adc	r22, r18
 62e:	73 1f       	adc	r23, r19
 630:	84 1f       	adc	r24, r20
 632:	48 f4       	brcc	.+18     	; 0x646 <__addsf3x+0x9c>
 634:	87 95       	ror	r24
 636:	77 95       	ror	r23
 638:	67 95       	ror	r22
 63a:	b7 95       	ror	r27
 63c:	f7 95       	ror	r31
 63e:	9e 3f       	cpi	r25, 0xFE	; 254
 640:	08 f0       	brcs	.+2      	; 0x644 <__addsf3x+0x9a>
 642:	b0 cf       	rjmp	.-160    	; 0x5a4 <__addsf3+0x28>
 644:	93 95       	inc	r25
 646:	88 0f       	add	r24, r24
 648:	08 f0       	brcs	.+2      	; 0x64c <__addsf3x+0xa2>
 64a:	99 27       	eor	r25, r25
 64c:	ee 0f       	add	r30, r30
 64e:	97 95       	ror	r25
 650:	87 95       	ror	r24
 652:	08 95       	ret

00000654 <__fixsfsi>:
 654:	0e 94 31 03 	call	0x662	; 0x662 <__fixunssfsi>
 658:	68 94       	set
 65a:	b1 11       	cpse	r27, r1
 65c:	0c 94 e8 03 	jmp	0x7d0	; 0x7d0 <__fp_szero>
 660:	08 95       	ret

00000662 <__fixunssfsi>:
 662:	0e 94 cd 03 	call	0x79a	; 0x79a <__fp_splitA>
 666:	88 f0       	brcs	.+34     	; 0x68a <__fixunssfsi+0x28>
 668:	9f 57       	subi	r25, 0x7F	; 127
 66a:	98 f0       	brcs	.+38     	; 0x692 <__fixunssfsi+0x30>
 66c:	b9 2f       	mov	r27, r25
 66e:	99 27       	eor	r25, r25
 670:	b7 51       	subi	r27, 0x17	; 23
 672:	b0 f0       	brcs	.+44     	; 0x6a0 <__fixunssfsi+0x3e>
 674:	e1 f0       	breq	.+56     	; 0x6ae <__fixunssfsi+0x4c>
 676:	66 0f       	add	r22, r22
 678:	77 1f       	adc	r23, r23
 67a:	88 1f       	adc	r24, r24
 67c:	99 1f       	adc	r25, r25
 67e:	1a f0       	brmi	.+6      	; 0x686 <__fixunssfsi+0x24>
 680:	ba 95       	dec	r27
 682:	c9 f7       	brne	.-14     	; 0x676 <__fixunssfsi+0x14>
 684:	14 c0       	rjmp	.+40     	; 0x6ae <__fixunssfsi+0x4c>
 686:	b1 30       	cpi	r27, 0x01	; 1
 688:	91 f0       	breq	.+36     	; 0x6ae <__fixunssfsi+0x4c>
 68a:	0e 94 e7 03 	call	0x7ce	; 0x7ce <__fp_zero>
 68e:	b1 e0       	ldi	r27, 0x01	; 1
 690:	08 95       	ret
 692:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__fp_zero>
 696:	67 2f       	mov	r22, r23
 698:	78 2f       	mov	r23, r24
 69a:	88 27       	eor	r24, r24
 69c:	b8 5f       	subi	r27, 0xF8	; 248
 69e:	39 f0       	breq	.+14     	; 0x6ae <__fixunssfsi+0x4c>
 6a0:	b9 3f       	cpi	r27, 0xF9	; 249
 6a2:	cc f3       	brlt	.-14     	; 0x696 <__fixunssfsi+0x34>
 6a4:	86 95       	lsr	r24
 6a6:	77 95       	ror	r23
 6a8:	67 95       	ror	r22
 6aa:	b3 95       	inc	r27
 6ac:	d9 f7       	brne	.-10     	; 0x6a4 <__fixunssfsi+0x42>
 6ae:	3e f4       	brtc	.+14     	; 0x6be <__fixunssfsi+0x5c>
 6b0:	90 95       	com	r25
 6b2:	80 95       	com	r24
 6b4:	70 95       	com	r23
 6b6:	61 95       	neg	r22
 6b8:	7f 4f       	sbci	r23, 0xFF	; 255
 6ba:	8f 4f       	sbci	r24, 0xFF	; 255
 6bc:	9f 4f       	sbci	r25, 0xFF	; 255
 6be:	08 95       	ret

000006c0 <__floatunsisf>:
 6c0:	e8 94       	clt
 6c2:	09 c0       	rjmp	.+18     	; 0x6d6 <__floatsisf+0x12>

000006c4 <__floatsisf>:
 6c4:	97 fb       	bst	r25, 7
 6c6:	3e f4       	brtc	.+14     	; 0x6d6 <__floatsisf+0x12>
 6c8:	90 95       	com	r25
 6ca:	80 95       	com	r24
 6cc:	70 95       	com	r23
 6ce:	61 95       	neg	r22
 6d0:	7f 4f       	sbci	r23, 0xFF	; 255
 6d2:	8f 4f       	sbci	r24, 0xFF	; 255
 6d4:	9f 4f       	sbci	r25, 0xFF	; 255
 6d6:	99 23       	and	r25, r25
 6d8:	a9 f0       	breq	.+42     	; 0x704 <__floatsisf+0x40>
 6da:	f9 2f       	mov	r31, r25
 6dc:	96 e9       	ldi	r25, 0x96	; 150
 6de:	bb 27       	eor	r27, r27
 6e0:	93 95       	inc	r25
 6e2:	f6 95       	lsr	r31
 6e4:	87 95       	ror	r24
 6e6:	77 95       	ror	r23
 6e8:	67 95       	ror	r22
 6ea:	b7 95       	ror	r27
 6ec:	f1 11       	cpse	r31, r1
 6ee:	f8 cf       	rjmp	.-16     	; 0x6e0 <__floatsisf+0x1c>
 6f0:	fa f4       	brpl	.+62     	; 0x730 <__floatsisf+0x6c>
 6f2:	bb 0f       	add	r27, r27
 6f4:	11 f4       	brne	.+4      	; 0x6fa <__floatsisf+0x36>
 6f6:	60 ff       	sbrs	r22, 0
 6f8:	1b c0       	rjmp	.+54     	; 0x730 <__floatsisf+0x6c>
 6fa:	6f 5f       	subi	r22, 0xFF	; 255
 6fc:	7f 4f       	sbci	r23, 0xFF	; 255
 6fe:	8f 4f       	sbci	r24, 0xFF	; 255
 700:	9f 4f       	sbci	r25, 0xFF	; 255
 702:	16 c0       	rjmp	.+44     	; 0x730 <__floatsisf+0x6c>
 704:	88 23       	and	r24, r24
 706:	11 f0       	breq	.+4      	; 0x70c <__floatsisf+0x48>
 708:	96 e9       	ldi	r25, 0x96	; 150
 70a:	11 c0       	rjmp	.+34     	; 0x72e <__floatsisf+0x6a>
 70c:	77 23       	and	r23, r23
 70e:	21 f0       	breq	.+8      	; 0x718 <__floatsisf+0x54>
 710:	9e e8       	ldi	r25, 0x8E	; 142
 712:	87 2f       	mov	r24, r23
 714:	76 2f       	mov	r23, r22
 716:	05 c0       	rjmp	.+10     	; 0x722 <__floatsisf+0x5e>
 718:	66 23       	and	r22, r22
 71a:	71 f0       	breq	.+28     	; 0x738 <__floatsisf+0x74>
 71c:	96 e8       	ldi	r25, 0x86	; 134
 71e:	86 2f       	mov	r24, r22
 720:	70 e0       	ldi	r23, 0x00	; 0
 722:	60 e0       	ldi	r22, 0x00	; 0
 724:	2a f0       	brmi	.+10     	; 0x730 <__floatsisf+0x6c>
 726:	9a 95       	dec	r25
 728:	66 0f       	add	r22, r22
 72a:	77 1f       	adc	r23, r23
 72c:	88 1f       	adc	r24, r24
 72e:	da f7       	brpl	.-10     	; 0x726 <__floatsisf+0x62>
 730:	88 0f       	add	r24, r24
 732:	96 95       	lsr	r25
 734:	87 95       	ror	r24
 736:	97 f9       	bld	r25, 7
 738:	08 95       	ret

0000073a <__fp_inf>:
 73a:	97 f9       	bld	r25, 7
 73c:	9f 67       	ori	r25, 0x7F	; 127
 73e:	80 e8       	ldi	r24, 0x80	; 128
 740:	70 e0       	ldi	r23, 0x00	; 0
 742:	60 e0       	ldi	r22, 0x00	; 0
 744:	08 95       	ret

00000746 <__fp_nan>:
 746:	9f ef       	ldi	r25, 0xFF	; 255
 748:	80 ec       	ldi	r24, 0xC0	; 192
 74a:	08 95       	ret

0000074c <__fp_pscA>:
 74c:	00 24       	eor	r0, r0
 74e:	0a 94       	dec	r0
 750:	16 16       	cp	r1, r22
 752:	17 06       	cpc	r1, r23
 754:	18 06       	cpc	r1, r24
 756:	09 06       	cpc	r0, r25
 758:	08 95       	ret

0000075a <__fp_pscB>:
 75a:	00 24       	eor	r0, r0
 75c:	0a 94       	dec	r0
 75e:	12 16       	cp	r1, r18
 760:	13 06       	cpc	r1, r19
 762:	14 06       	cpc	r1, r20
 764:	05 06       	cpc	r0, r21
 766:	08 95       	ret

00000768 <__fp_round>:
 768:	09 2e       	mov	r0, r25
 76a:	03 94       	inc	r0
 76c:	00 0c       	add	r0, r0
 76e:	11 f4       	brne	.+4      	; 0x774 <__fp_round+0xc>
 770:	88 23       	and	r24, r24
 772:	52 f0       	brmi	.+20     	; 0x788 <__fp_round+0x20>
 774:	bb 0f       	add	r27, r27
 776:	40 f4       	brcc	.+16     	; 0x788 <__fp_round+0x20>
 778:	bf 2b       	or	r27, r31
 77a:	11 f4       	brne	.+4      	; 0x780 <__fp_round+0x18>
 77c:	60 ff       	sbrs	r22, 0
 77e:	04 c0       	rjmp	.+8      	; 0x788 <__fp_round+0x20>
 780:	6f 5f       	subi	r22, 0xFF	; 255
 782:	7f 4f       	sbci	r23, 0xFF	; 255
 784:	8f 4f       	sbci	r24, 0xFF	; 255
 786:	9f 4f       	sbci	r25, 0xFF	; 255
 788:	08 95       	ret

0000078a <__fp_split3>:
 78a:	57 fd       	sbrc	r21, 7
 78c:	90 58       	subi	r25, 0x80	; 128
 78e:	44 0f       	add	r20, r20
 790:	55 1f       	adc	r21, r21
 792:	59 f0       	breq	.+22     	; 0x7aa <__fp_splitA+0x10>
 794:	5f 3f       	cpi	r21, 0xFF	; 255
 796:	71 f0       	breq	.+28     	; 0x7b4 <__fp_splitA+0x1a>
 798:	47 95       	ror	r20

0000079a <__fp_splitA>:
 79a:	88 0f       	add	r24, r24
 79c:	97 fb       	bst	r25, 7
 79e:	99 1f       	adc	r25, r25
 7a0:	61 f0       	breq	.+24     	; 0x7ba <__fp_splitA+0x20>
 7a2:	9f 3f       	cpi	r25, 0xFF	; 255
 7a4:	79 f0       	breq	.+30     	; 0x7c4 <__fp_splitA+0x2a>
 7a6:	87 95       	ror	r24
 7a8:	08 95       	ret
 7aa:	12 16       	cp	r1, r18
 7ac:	13 06       	cpc	r1, r19
 7ae:	14 06       	cpc	r1, r20
 7b0:	55 1f       	adc	r21, r21
 7b2:	f2 cf       	rjmp	.-28     	; 0x798 <__fp_split3+0xe>
 7b4:	46 95       	lsr	r20
 7b6:	f1 df       	rcall	.-30     	; 0x79a <__fp_splitA>
 7b8:	08 c0       	rjmp	.+16     	; 0x7ca <__fp_splitA+0x30>
 7ba:	16 16       	cp	r1, r22
 7bc:	17 06       	cpc	r1, r23
 7be:	18 06       	cpc	r1, r24
 7c0:	99 1f       	adc	r25, r25
 7c2:	f1 cf       	rjmp	.-30     	; 0x7a6 <__fp_splitA+0xc>
 7c4:	86 95       	lsr	r24
 7c6:	71 05       	cpc	r23, r1
 7c8:	61 05       	cpc	r22, r1
 7ca:	08 94       	sec
 7cc:	08 95       	ret

000007ce <__fp_zero>:
 7ce:	e8 94       	clt

000007d0 <__fp_szero>:
 7d0:	bb 27       	eor	r27, r27
 7d2:	66 27       	eor	r22, r22
 7d4:	77 27       	eor	r23, r23
 7d6:	cb 01       	movw	r24, r22
 7d8:	97 f9       	bld	r25, 7
 7da:	08 95       	ret

000007dc <__mulsf3>:
 7dc:	0e 94 01 04 	call	0x802	; 0x802 <__mulsf3x>
 7e0:	0c 94 b4 03 	jmp	0x768	; 0x768 <__fp_round>
 7e4:	0e 94 a6 03 	call	0x74c	; 0x74c <__fp_pscA>
 7e8:	38 f0       	brcs	.+14     	; 0x7f8 <__mulsf3+0x1c>
 7ea:	0e 94 ad 03 	call	0x75a	; 0x75a <__fp_pscB>
 7ee:	20 f0       	brcs	.+8      	; 0x7f8 <__mulsf3+0x1c>
 7f0:	95 23       	and	r25, r21
 7f2:	11 f0       	breq	.+4      	; 0x7f8 <__mulsf3+0x1c>
 7f4:	0c 94 9d 03 	jmp	0x73a	; 0x73a <__fp_inf>
 7f8:	0c 94 a3 03 	jmp	0x746	; 0x746 <__fp_nan>
 7fc:	11 24       	eor	r1, r1
 7fe:	0c 94 e8 03 	jmp	0x7d0	; 0x7d0 <__fp_szero>

00000802 <__mulsf3x>:
 802:	0e 94 c5 03 	call	0x78a	; 0x78a <__fp_split3>
 806:	70 f3       	brcs	.-36     	; 0x7e4 <__mulsf3+0x8>

00000808 <__mulsf3_pse>:
 808:	95 9f       	mul	r25, r21
 80a:	c1 f3       	breq	.-16     	; 0x7fc <__mulsf3+0x20>
 80c:	95 0f       	add	r25, r21
 80e:	50 e0       	ldi	r21, 0x00	; 0
 810:	55 1f       	adc	r21, r21
 812:	62 9f       	mul	r22, r18
 814:	f0 01       	movw	r30, r0
 816:	72 9f       	mul	r23, r18
 818:	bb 27       	eor	r27, r27
 81a:	f0 0d       	add	r31, r0
 81c:	b1 1d       	adc	r27, r1
 81e:	63 9f       	mul	r22, r19
 820:	aa 27       	eor	r26, r26
 822:	f0 0d       	add	r31, r0
 824:	b1 1d       	adc	r27, r1
 826:	aa 1f       	adc	r26, r26
 828:	64 9f       	mul	r22, r20
 82a:	66 27       	eor	r22, r22
 82c:	b0 0d       	add	r27, r0
 82e:	a1 1d       	adc	r26, r1
 830:	66 1f       	adc	r22, r22
 832:	82 9f       	mul	r24, r18
 834:	22 27       	eor	r18, r18
 836:	b0 0d       	add	r27, r0
 838:	a1 1d       	adc	r26, r1
 83a:	62 1f       	adc	r22, r18
 83c:	73 9f       	mul	r23, r19
 83e:	b0 0d       	add	r27, r0
 840:	a1 1d       	adc	r26, r1
 842:	62 1f       	adc	r22, r18
 844:	83 9f       	mul	r24, r19
 846:	a0 0d       	add	r26, r0
 848:	61 1d       	adc	r22, r1
 84a:	22 1f       	adc	r18, r18
 84c:	74 9f       	mul	r23, r20
 84e:	33 27       	eor	r19, r19
 850:	a0 0d       	add	r26, r0
 852:	61 1d       	adc	r22, r1
 854:	23 1f       	adc	r18, r19
 856:	84 9f       	mul	r24, r20
 858:	60 0d       	add	r22, r0
 85a:	21 1d       	adc	r18, r1
 85c:	82 2f       	mov	r24, r18
 85e:	76 2f       	mov	r23, r22
 860:	6a 2f       	mov	r22, r26
 862:	11 24       	eor	r1, r1
 864:	9f 57       	subi	r25, 0x7F	; 127
 866:	50 40       	sbci	r21, 0x00	; 0
 868:	9a f0       	brmi	.+38     	; 0x890 <__mulsf3_pse+0x88>
 86a:	f1 f0       	breq	.+60     	; 0x8a8 <__mulsf3_pse+0xa0>
 86c:	88 23       	and	r24, r24
 86e:	4a f0       	brmi	.+18     	; 0x882 <__mulsf3_pse+0x7a>
 870:	ee 0f       	add	r30, r30
 872:	ff 1f       	adc	r31, r31
 874:	bb 1f       	adc	r27, r27
 876:	66 1f       	adc	r22, r22
 878:	77 1f       	adc	r23, r23
 87a:	88 1f       	adc	r24, r24
 87c:	91 50       	subi	r25, 0x01	; 1
 87e:	50 40       	sbci	r21, 0x00	; 0
 880:	a9 f7       	brne	.-22     	; 0x86c <__mulsf3_pse+0x64>
 882:	9e 3f       	cpi	r25, 0xFE	; 254
 884:	51 05       	cpc	r21, r1
 886:	80 f0       	brcs	.+32     	; 0x8a8 <__mulsf3_pse+0xa0>
 888:	0c 94 9d 03 	jmp	0x73a	; 0x73a <__fp_inf>
 88c:	0c 94 e8 03 	jmp	0x7d0	; 0x7d0 <__fp_szero>
 890:	5f 3f       	cpi	r21, 0xFF	; 255
 892:	e4 f3       	brlt	.-8      	; 0x88c <__mulsf3_pse+0x84>
 894:	98 3e       	cpi	r25, 0xE8	; 232
 896:	d4 f3       	brlt	.-12     	; 0x88c <__mulsf3_pse+0x84>
 898:	86 95       	lsr	r24
 89a:	77 95       	ror	r23
 89c:	67 95       	ror	r22
 89e:	b7 95       	ror	r27
 8a0:	f7 95       	ror	r31
 8a2:	e7 95       	ror	r30
 8a4:	9f 5f       	subi	r25, 0xFF	; 255
 8a6:	c1 f7       	brne	.-16     	; 0x898 <__mulsf3_pse+0x90>
 8a8:	fe 2b       	or	r31, r30
 8aa:	88 0f       	add	r24, r24
 8ac:	91 1d       	adc	r25, r1
 8ae:	96 95       	lsr	r25
 8b0:	87 95       	ror	r24
 8b2:	97 f9       	bld	r25, 7
 8b4:	08 95       	ret

000008b6 <atoi>:
 8b6:	fc 01       	movw	r30, r24
 8b8:	88 27       	eor	r24, r24
 8ba:	99 27       	eor	r25, r25
 8bc:	e8 94       	clt
 8be:	21 91       	ld	r18, Z+
 8c0:	20 32       	cpi	r18, 0x20	; 32
 8c2:	e9 f3       	breq	.-6      	; 0x8be <atoi+0x8>
 8c4:	29 30       	cpi	r18, 0x09	; 9
 8c6:	10 f0       	brcs	.+4      	; 0x8cc <atoi+0x16>
 8c8:	2e 30       	cpi	r18, 0x0E	; 14
 8ca:	c8 f3       	brcs	.-14     	; 0x8be <atoi+0x8>
 8cc:	2b 32       	cpi	r18, 0x2B	; 43
 8ce:	41 f0       	breq	.+16     	; 0x8e0 <atoi+0x2a>
 8d0:	2d 32       	cpi	r18, 0x2D	; 45
 8d2:	39 f4       	brne	.+14     	; 0x8e2 <atoi+0x2c>
 8d4:	68 94       	set
 8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <atoi+0x2a>
 8d8:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__mulhi_const_10>
 8dc:	82 0f       	add	r24, r18
 8de:	91 1d       	adc	r25, r1
 8e0:	21 91       	ld	r18, Z+
 8e2:	20 53       	subi	r18, 0x30	; 48
 8e4:	2a 30       	cpi	r18, 0x0A	; 10
 8e6:	c0 f3       	brcs	.-16     	; 0x8d8 <atoi+0x22>
 8e8:	1e f4       	brtc	.+6      	; 0x8f0 <atoi+0x3a>
 8ea:	90 95       	com	r25
 8ec:	81 95       	neg	r24
 8ee:	9f 4f       	sbci	r25, 0xFF	; 255
 8f0:	08 95       	ret

000008f2 <__mulhi_const_10>:
 8f2:	7a e0       	ldi	r23, 0x0A	; 10
 8f4:	97 9f       	mul	r25, r23
 8f6:	90 2d       	mov	r25, r0
 8f8:	87 9f       	mul	r24, r23
 8fa:	80 2d       	mov	r24, r0
 8fc:	91 0d       	add	r25, r1
 8fe:	11 24       	eor	r1, r1
 900:	08 95       	ret

00000902 <sprintf>:
 902:	ae e0       	ldi	r26, 0x0E	; 14
 904:	b0 e0       	ldi	r27, 0x00	; 0
 906:	e7 e8       	ldi	r30, 0x87	; 135
 908:	f4 e0       	ldi	r31, 0x04	; 4
 90a:	0c 94 42 07 	jmp	0xe84	; 0xe84 <__prologue_saves__+0x1c>
 90e:	0d 89       	ldd	r16, Y+21	; 0x15
 910:	1e 89       	ldd	r17, Y+22	; 0x16
 912:	86 e0       	ldi	r24, 0x06	; 6
 914:	8c 83       	std	Y+4, r24	; 0x04
 916:	1a 83       	std	Y+2, r17	; 0x02
 918:	09 83       	std	Y+1, r16	; 0x01
 91a:	8f ef       	ldi	r24, 0xFF	; 255
 91c:	9f e7       	ldi	r25, 0x7F	; 127
 91e:	9e 83       	std	Y+6, r25	; 0x06
 920:	8d 83       	std	Y+5, r24	; 0x05
 922:	ae 01       	movw	r20, r28
 924:	47 5e       	subi	r20, 0xE7	; 231
 926:	5f 4f       	sbci	r21, 0xFF	; 255
 928:	6f 89       	ldd	r22, Y+23	; 0x17
 92a:	78 8d       	ldd	r23, Y+24	; 0x18
 92c:	ce 01       	movw	r24, r28
 92e:	01 96       	adiw	r24, 0x01	; 1
 930:	0e 94 a3 04 	call	0x946	; 0x946 <vfprintf>
 934:	ef 81       	ldd	r30, Y+7	; 0x07
 936:	f8 85       	ldd	r31, Y+8	; 0x08
 938:	e0 0f       	add	r30, r16
 93a:	f1 1f       	adc	r31, r17
 93c:	10 82       	st	Z, r1
 93e:	2e 96       	adiw	r28, 0x0e	; 14
 940:	e4 e0       	ldi	r30, 0x04	; 4
 942:	0c 94 5e 07 	jmp	0xebc	; 0xebc <__epilogue_restores__+0x1c>

00000946 <vfprintf>:
 946:	ab e0       	ldi	r26, 0x0B	; 11
 948:	b0 e0       	ldi	r27, 0x00	; 0
 94a:	e9 ea       	ldi	r30, 0xA9	; 169
 94c:	f4 e0       	ldi	r31, 0x04	; 4
 94e:	0c 94 34 07 	jmp	0xe68	; 0xe68 <__prologue_saves__>
 952:	6c 01       	movw	r12, r24
 954:	7b 01       	movw	r14, r22
 956:	8a 01       	movw	r16, r20
 958:	fc 01       	movw	r30, r24
 95a:	17 82       	std	Z+7, r1	; 0x07
 95c:	16 82       	std	Z+6, r1	; 0x06
 95e:	83 81       	ldd	r24, Z+3	; 0x03
 960:	81 ff       	sbrs	r24, 1
 962:	cc c1       	rjmp	.+920    	; 0xcfc <vfprintf+0x3b6>
 964:	ce 01       	movw	r24, r28
 966:	01 96       	adiw	r24, 0x01	; 1
 968:	3c 01       	movw	r6, r24
 96a:	f6 01       	movw	r30, r12
 96c:	93 81       	ldd	r25, Z+3	; 0x03
 96e:	f7 01       	movw	r30, r14
 970:	93 fd       	sbrc	r25, 3
 972:	85 91       	lpm	r24, Z+
 974:	93 ff       	sbrs	r25, 3
 976:	81 91       	ld	r24, Z+
 978:	7f 01       	movw	r14, r30
 97a:	88 23       	and	r24, r24
 97c:	09 f4       	brne	.+2      	; 0x980 <vfprintf+0x3a>
 97e:	ba c1       	rjmp	.+884    	; 0xcf4 <vfprintf+0x3ae>
 980:	85 32       	cpi	r24, 0x25	; 37
 982:	39 f4       	brne	.+14     	; 0x992 <vfprintf+0x4c>
 984:	93 fd       	sbrc	r25, 3
 986:	85 91       	lpm	r24, Z+
 988:	93 ff       	sbrs	r25, 3
 98a:	81 91       	ld	r24, Z+
 98c:	7f 01       	movw	r14, r30
 98e:	85 32       	cpi	r24, 0x25	; 37
 990:	29 f4       	brne	.+10     	; 0x99c <vfprintf+0x56>
 992:	b6 01       	movw	r22, r12
 994:	90 e0       	ldi	r25, 0x00	; 0
 996:	0e 94 9a 06 	call	0xd34	; 0xd34 <fputc>
 99a:	e7 cf       	rjmp	.-50     	; 0x96a <vfprintf+0x24>
 99c:	91 2c       	mov	r9, r1
 99e:	21 2c       	mov	r2, r1
 9a0:	31 2c       	mov	r3, r1
 9a2:	ff e1       	ldi	r31, 0x1F	; 31
 9a4:	f3 15       	cp	r31, r3
 9a6:	d8 f0       	brcs	.+54     	; 0x9de <vfprintf+0x98>
 9a8:	8b 32       	cpi	r24, 0x2B	; 43
 9aa:	79 f0       	breq	.+30     	; 0x9ca <vfprintf+0x84>
 9ac:	38 f4       	brcc	.+14     	; 0x9bc <vfprintf+0x76>
 9ae:	80 32       	cpi	r24, 0x20	; 32
 9b0:	79 f0       	breq	.+30     	; 0x9d0 <vfprintf+0x8a>
 9b2:	83 32       	cpi	r24, 0x23	; 35
 9b4:	a1 f4       	brne	.+40     	; 0x9de <vfprintf+0x98>
 9b6:	23 2d       	mov	r18, r3
 9b8:	20 61       	ori	r18, 0x10	; 16
 9ba:	1d c0       	rjmp	.+58     	; 0x9f6 <vfprintf+0xb0>
 9bc:	8d 32       	cpi	r24, 0x2D	; 45
 9be:	61 f0       	breq	.+24     	; 0x9d8 <vfprintf+0x92>
 9c0:	80 33       	cpi	r24, 0x30	; 48
 9c2:	69 f4       	brne	.+26     	; 0x9de <vfprintf+0x98>
 9c4:	23 2d       	mov	r18, r3
 9c6:	21 60       	ori	r18, 0x01	; 1
 9c8:	16 c0       	rjmp	.+44     	; 0x9f6 <vfprintf+0xb0>
 9ca:	83 2d       	mov	r24, r3
 9cc:	82 60       	ori	r24, 0x02	; 2
 9ce:	38 2e       	mov	r3, r24
 9d0:	e3 2d       	mov	r30, r3
 9d2:	e4 60       	ori	r30, 0x04	; 4
 9d4:	3e 2e       	mov	r3, r30
 9d6:	2a c0       	rjmp	.+84     	; 0xa2c <vfprintf+0xe6>
 9d8:	f3 2d       	mov	r31, r3
 9da:	f8 60       	ori	r31, 0x08	; 8
 9dc:	1d c0       	rjmp	.+58     	; 0xa18 <vfprintf+0xd2>
 9de:	37 fc       	sbrc	r3, 7
 9e0:	2d c0       	rjmp	.+90     	; 0xa3c <vfprintf+0xf6>
 9e2:	20 ed       	ldi	r18, 0xD0	; 208
 9e4:	28 0f       	add	r18, r24
 9e6:	2a 30       	cpi	r18, 0x0A	; 10
 9e8:	40 f0       	brcs	.+16     	; 0x9fa <vfprintf+0xb4>
 9ea:	8e 32       	cpi	r24, 0x2E	; 46
 9ec:	b9 f4       	brne	.+46     	; 0xa1c <vfprintf+0xd6>
 9ee:	36 fc       	sbrc	r3, 6
 9f0:	81 c1       	rjmp	.+770    	; 0xcf4 <vfprintf+0x3ae>
 9f2:	23 2d       	mov	r18, r3
 9f4:	20 64       	ori	r18, 0x40	; 64
 9f6:	32 2e       	mov	r3, r18
 9f8:	19 c0       	rjmp	.+50     	; 0xa2c <vfprintf+0xe6>
 9fa:	36 fe       	sbrs	r3, 6
 9fc:	06 c0       	rjmp	.+12     	; 0xa0a <vfprintf+0xc4>
 9fe:	8a e0       	ldi	r24, 0x0A	; 10
 a00:	98 9e       	mul	r9, r24
 a02:	20 0d       	add	r18, r0
 a04:	11 24       	eor	r1, r1
 a06:	92 2e       	mov	r9, r18
 a08:	11 c0       	rjmp	.+34     	; 0xa2c <vfprintf+0xe6>
 a0a:	ea e0       	ldi	r30, 0x0A	; 10
 a0c:	2e 9e       	mul	r2, r30
 a0e:	20 0d       	add	r18, r0
 a10:	11 24       	eor	r1, r1
 a12:	22 2e       	mov	r2, r18
 a14:	f3 2d       	mov	r31, r3
 a16:	f0 62       	ori	r31, 0x20	; 32
 a18:	3f 2e       	mov	r3, r31
 a1a:	08 c0       	rjmp	.+16     	; 0xa2c <vfprintf+0xe6>
 a1c:	8c 36       	cpi	r24, 0x6C	; 108
 a1e:	21 f4       	brne	.+8      	; 0xa28 <vfprintf+0xe2>
 a20:	83 2d       	mov	r24, r3
 a22:	80 68       	ori	r24, 0x80	; 128
 a24:	38 2e       	mov	r3, r24
 a26:	02 c0       	rjmp	.+4      	; 0xa2c <vfprintf+0xe6>
 a28:	88 36       	cpi	r24, 0x68	; 104
 a2a:	41 f4       	brne	.+16     	; 0xa3c <vfprintf+0xf6>
 a2c:	f7 01       	movw	r30, r14
 a2e:	93 fd       	sbrc	r25, 3
 a30:	85 91       	lpm	r24, Z+
 a32:	93 ff       	sbrs	r25, 3
 a34:	81 91       	ld	r24, Z+
 a36:	7f 01       	movw	r14, r30
 a38:	81 11       	cpse	r24, r1
 a3a:	b3 cf       	rjmp	.-154    	; 0x9a2 <vfprintf+0x5c>
 a3c:	98 2f       	mov	r25, r24
 a3e:	9f 7d       	andi	r25, 0xDF	; 223
 a40:	95 54       	subi	r25, 0x45	; 69
 a42:	93 30       	cpi	r25, 0x03	; 3
 a44:	28 f4       	brcc	.+10     	; 0xa50 <vfprintf+0x10a>
 a46:	0c 5f       	subi	r16, 0xFC	; 252
 a48:	1f 4f       	sbci	r17, 0xFF	; 255
 a4a:	9f e3       	ldi	r25, 0x3F	; 63
 a4c:	99 83       	std	Y+1, r25	; 0x01
 a4e:	0d c0       	rjmp	.+26     	; 0xa6a <vfprintf+0x124>
 a50:	83 36       	cpi	r24, 0x63	; 99
 a52:	31 f0       	breq	.+12     	; 0xa60 <vfprintf+0x11a>
 a54:	83 37       	cpi	r24, 0x73	; 115
 a56:	71 f0       	breq	.+28     	; 0xa74 <vfprintf+0x12e>
 a58:	83 35       	cpi	r24, 0x53	; 83
 a5a:	09 f0       	breq	.+2      	; 0xa5e <vfprintf+0x118>
 a5c:	59 c0       	rjmp	.+178    	; 0xb10 <vfprintf+0x1ca>
 a5e:	21 c0       	rjmp	.+66     	; 0xaa2 <vfprintf+0x15c>
 a60:	f8 01       	movw	r30, r16
 a62:	80 81       	ld	r24, Z
 a64:	89 83       	std	Y+1, r24	; 0x01
 a66:	0e 5f       	subi	r16, 0xFE	; 254
 a68:	1f 4f       	sbci	r17, 0xFF	; 255
 a6a:	88 24       	eor	r8, r8
 a6c:	83 94       	inc	r8
 a6e:	91 2c       	mov	r9, r1
 a70:	53 01       	movw	r10, r6
 a72:	13 c0       	rjmp	.+38     	; 0xa9a <vfprintf+0x154>
 a74:	28 01       	movw	r4, r16
 a76:	f2 e0       	ldi	r31, 0x02	; 2
 a78:	4f 0e       	add	r4, r31
 a7a:	51 1c       	adc	r5, r1
 a7c:	f8 01       	movw	r30, r16
 a7e:	a0 80       	ld	r10, Z
 a80:	b1 80       	ldd	r11, Z+1	; 0x01
 a82:	36 fe       	sbrs	r3, 6
 a84:	03 c0       	rjmp	.+6      	; 0xa8c <vfprintf+0x146>
 a86:	69 2d       	mov	r22, r9
 a88:	70 e0       	ldi	r23, 0x00	; 0
 a8a:	02 c0       	rjmp	.+4      	; 0xa90 <vfprintf+0x14a>
 a8c:	6f ef       	ldi	r22, 0xFF	; 255
 a8e:	7f ef       	ldi	r23, 0xFF	; 255
 a90:	c5 01       	movw	r24, r10
 a92:	0e 94 8f 06 	call	0xd1e	; 0xd1e <strnlen>
 a96:	4c 01       	movw	r8, r24
 a98:	82 01       	movw	r16, r4
 a9a:	f3 2d       	mov	r31, r3
 a9c:	ff 77       	andi	r31, 0x7F	; 127
 a9e:	3f 2e       	mov	r3, r31
 aa0:	16 c0       	rjmp	.+44     	; 0xace <vfprintf+0x188>
 aa2:	28 01       	movw	r4, r16
 aa4:	22 e0       	ldi	r18, 0x02	; 2
 aa6:	42 0e       	add	r4, r18
 aa8:	51 1c       	adc	r5, r1
 aaa:	f8 01       	movw	r30, r16
 aac:	a0 80       	ld	r10, Z
 aae:	b1 80       	ldd	r11, Z+1	; 0x01
 ab0:	36 fe       	sbrs	r3, 6
 ab2:	03 c0       	rjmp	.+6      	; 0xaba <vfprintf+0x174>
 ab4:	69 2d       	mov	r22, r9
 ab6:	70 e0       	ldi	r23, 0x00	; 0
 ab8:	02 c0       	rjmp	.+4      	; 0xabe <vfprintf+0x178>
 aba:	6f ef       	ldi	r22, 0xFF	; 255
 abc:	7f ef       	ldi	r23, 0xFF	; 255
 abe:	c5 01       	movw	r24, r10
 ac0:	0e 94 84 06 	call	0xd08	; 0xd08 <strnlen_P>
 ac4:	4c 01       	movw	r8, r24
 ac6:	f3 2d       	mov	r31, r3
 ac8:	f0 68       	ori	r31, 0x80	; 128
 aca:	3f 2e       	mov	r3, r31
 acc:	82 01       	movw	r16, r4
 ace:	33 fc       	sbrc	r3, 3
 ad0:	1b c0       	rjmp	.+54     	; 0xb08 <vfprintf+0x1c2>
 ad2:	82 2d       	mov	r24, r2
 ad4:	90 e0       	ldi	r25, 0x00	; 0
 ad6:	88 16       	cp	r8, r24
 ad8:	99 06       	cpc	r9, r25
 ada:	b0 f4       	brcc	.+44     	; 0xb08 <vfprintf+0x1c2>
 adc:	b6 01       	movw	r22, r12
 ade:	80 e2       	ldi	r24, 0x20	; 32
 ae0:	90 e0       	ldi	r25, 0x00	; 0
 ae2:	0e 94 9a 06 	call	0xd34	; 0xd34 <fputc>
 ae6:	2a 94       	dec	r2
 ae8:	f4 cf       	rjmp	.-24     	; 0xad2 <vfprintf+0x18c>
 aea:	f5 01       	movw	r30, r10
 aec:	37 fc       	sbrc	r3, 7
 aee:	85 91       	lpm	r24, Z+
 af0:	37 fe       	sbrs	r3, 7
 af2:	81 91       	ld	r24, Z+
 af4:	5f 01       	movw	r10, r30
 af6:	b6 01       	movw	r22, r12
 af8:	90 e0       	ldi	r25, 0x00	; 0
 afa:	0e 94 9a 06 	call	0xd34	; 0xd34 <fputc>
 afe:	21 10       	cpse	r2, r1
 b00:	2a 94       	dec	r2
 b02:	21 e0       	ldi	r18, 0x01	; 1
 b04:	82 1a       	sub	r8, r18
 b06:	91 08       	sbc	r9, r1
 b08:	81 14       	cp	r8, r1
 b0a:	91 04       	cpc	r9, r1
 b0c:	71 f7       	brne	.-36     	; 0xaea <vfprintf+0x1a4>
 b0e:	e8 c0       	rjmp	.+464    	; 0xce0 <vfprintf+0x39a>
 b10:	84 36       	cpi	r24, 0x64	; 100
 b12:	11 f0       	breq	.+4      	; 0xb18 <vfprintf+0x1d2>
 b14:	89 36       	cpi	r24, 0x69	; 105
 b16:	41 f5       	brne	.+80     	; 0xb68 <vfprintf+0x222>
 b18:	f8 01       	movw	r30, r16
 b1a:	37 fe       	sbrs	r3, 7
 b1c:	07 c0       	rjmp	.+14     	; 0xb2c <vfprintf+0x1e6>
 b1e:	60 81       	ld	r22, Z
 b20:	71 81       	ldd	r23, Z+1	; 0x01
 b22:	82 81       	ldd	r24, Z+2	; 0x02
 b24:	93 81       	ldd	r25, Z+3	; 0x03
 b26:	0c 5f       	subi	r16, 0xFC	; 252
 b28:	1f 4f       	sbci	r17, 0xFF	; 255
 b2a:	08 c0       	rjmp	.+16     	; 0xb3c <vfprintf+0x1f6>
 b2c:	60 81       	ld	r22, Z
 b2e:	71 81       	ldd	r23, Z+1	; 0x01
 b30:	07 2e       	mov	r0, r23
 b32:	00 0c       	add	r0, r0
 b34:	88 0b       	sbc	r24, r24
 b36:	99 0b       	sbc	r25, r25
 b38:	0e 5f       	subi	r16, 0xFE	; 254
 b3a:	1f 4f       	sbci	r17, 0xFF	; 255
 b3c:	f3 2d       	mov	r31, r3
 b3e:	ff 76       	andi	r31, 0x6F	; 111
 b40:	3f 2e       	mov	r3, r31
 b42:	97 ff       	sbrs	r25, 7
 b44:	09 c0       	rjmp	.+18     	; 0xb58 <vfprintf+0x212>
 b46:	90 95       	com	r25
 b48:	80 95       	com	r24
 b4a:	70 95       	com	r23
 b4c:	61 95       	neg	r22
 b4e:	7f 4f       	sbci	r23, 0xFF	; 255
 b50:	8f 4f       	sbci	r24, 0xFF	; 255
 b52:	9f 4f       	sbci	r25, 0xFF	; 255
 b54:	f0 68       	ori	r31, 0x80	; 128
 b56:	3f 2e       	mov	r3, r31
 b58:	2a e0       	ldi	r18, 0x0A	; 10
 b5a:	30 e0       	ldi	r19, 0x00	; 0
 b5c:	a3 01       	movw	r20, r6
 b5e:	0e 94 d6 06 	call	0xdac	; 0xdac <__ultoa_invert>
 b62:	88 2e       	mov	r8, r24
 b64:	86 18       	sub	r8, r6
 b66:	45 c0       	rjmp	.+138    	; 0xbf2 <vfprintf+0x2ac>
 b68:	85 37       	cpi	r24, 0x75	; 117
 b6a:	31 f4       	brne	.+12     	; 0xb78 <vfprintf+0x232>
 b6c:	23 2d       	mov	r18, r3
 b6e:	2f 7e       	andi	r18, 0xEF	; 239
 b70:	b2 2e       	mov	r11, r18
 b72:	2a e0       	ldi	r18, 0x0A	; 10
 b74:	30 e0       	ldi	r19, 0x00	; 0
 b76:	25 c0       	rjmp	.+74     	; 0xbc2 <vfprintf+0x27c>
 b78:	93 2d       	mov	r25, r3
 b7a:	99 7f       	andi	r25, 0xF9	; 249
 b7c:	b9 2e       	mov	r11, r25
 b7e:	8f 36       	cpi	r24, 0x6F	; 111
 b80:	c1 f0       	breq	.+48     	; 0xbb2 <vfprintf+0x26c>
 b82:	18 f4       	brcc	.+6      	; 0xb8a <vfprintf+0x244>
 b84:	88 35       	cpi	r24, 0x58	; 88
 b86:	79 f0       	breq	.+30     	; 0xba6 <vfprintf+0x260>
 b88:	b5 c0       	rjmp	.+362    	; 0xcf4 <vfprintf+0x3ae>
 b8a:	80 37       	cpi	r24, 0x70	; 112
 b8c:	19 f0       	breq	.+6      	; 0xb94 <vfprintf+0x24e>
 b8e:	88 37       	cpi	r24, 0x78	; 120
 b90:	21 f0       	breq	.+8      	; 0xb9a <vfprintf+0x254>
 b92:	b0 c0       	rjmp	.+352    	; 0xcf4 <vfprintf+0x3ae>
 b94:	e9 2f       	mov	r30, r25
 b96:	e0 61       	ori	r30, 0x10	; 16
 b98:	be 2e       	mov	r11, r30
 b9a:	b4 fe       	sbrs	r11, 4
 b9c:	0d c0       	rjmp	.+26     	; 0xbb8 <vfprintf+0x272>
 b9e:	fb 2d       	mov	r31, r11
 ba0:	f4 60       	ori	r31, 0x04	; 4
 ba2:	bf 2e       	mov	r11, r31
 ba4:	09 c0       	rjmp	.+18     	; 0xbb8 <vfprintf+0x272>
 ba6:	34 fe       	sbrs	r3, 4
 ba8:	0a c0       	rjmp	.+20     	; 0xbbe <vfprintf+0x278>
 baa:	29 2f       	mov	r18, r25
 bac:	26 60       	ori	r18, 0x06	; 6
 bae:	b2 2e       	mov	r11, r18
 bb0:	06 c0       	rjmp	.+12     	; 0xbbe <vfprintf+0x278>
 bb2:	28 e0       	ldi	r18, 0x08	; 8
 bb4:	30 e0       	ldi	r19, 0x00	; 0
 bb6:	05 c0       	rjmp	.+10     	; 0xbc2 <vfprintf+0x27c>
 bb8:	20 e1       	ldi	r18, 0x10	; 16
 bba:	30 e0       	ldi	r19, 0x00	; 0
 bbc:	02 c0       	rjmp	.+4      	; 0xbc2 <vfprintf+0x27c>
 bbe:	20 e1       	ldi	r18, 0x10	; 16
 bc0:	32 e0       	ldi	r19, 0x02	; 2
 bc2:	f8 01       	movw	r30, r16
 bc4:	b7 fe       	sbrs	r11, 7
 bc6:	07 c0       	rjmp	.+14     	; 0xbd6 <vfprintf+0x290>
 bc8:	60 81       	ld	r22, Z
 bca:	71 81       	ldd	r23, Z+1	; 0x01
 bcc:	82 81       	ldd	r24, Z+2	; 0x02
 bce:	93 81       	ldd	r25, Z+3	; 0x03
 bd0:	0c 5f       	subi	r16, 0xFC	; 252
 bd2:	1f 4f       	sbci	r17, 0xFF	; 255
 bd4:	06 c0       	rjmp	.+12     	; 0xbe2 <vfprintf+0x29c>
 bd6:	60 81       	ld	r22, Z
 bd8:	71 81       	ldd	r23, Z+1	; 0x01
 bda:	80 e0       	ldi	r24, 0x00	; 0
 bdc:	90 e0       	ldi	r25, 0x00	; 0
 bde:	0e 5f       	subi	r16, 0xFE	; 254
 be0:	1f 4f       	sbci	r17, 0xFF	; 255
 be2:	a3 01       	movw	r20, r6
 be4:	0e 94 d6 06 	call	0xdac	; 0xdac <__ultoa_invert>
 be8:	88 2e       	mov	r8, r24
 bea:	86 18       	sub	r8, r6
 bec:	fb 2d       	mov	r31, r11
 bee:	ff 77       	andi	r31, 0x7F	; 127
 bf0:	3f 2e       	mov	r3, r31
 bf2:	36 fe       	sbrs	r3, 6
 bf4:	0d c0       	rjmp	.+26     	; 0xc10 <vfprintf+0x2ca>
 bf6:	23 2d       	mov	r18, r3
 bf8:	2e 7f       	andi	r18, 0xFE	; 254
 bfa:	a2 2e       	mov	r10, r18
 bfc:	89 14       	cp	r8, r9
 bfe:	58 f4       	brcc	.+22     	; 0xc16 <vfprintf+0x2d0>
 c00:	34 fe       	sbrs	r3, 4
 c02:	0b c0       	rjmp	.+22     	; 0xc1a <vfprintf+0x2d4>
 c04:	32 fc       	sbrc	r3, 2
 c06:	09 c0       	rjmp	.+18     	; 0xc1a <vfprintf+0x2d4>
 c08:	83 2d       	mov	r24, r3
 c0a:	8e 7e       	andi	r24, 0xEE	; 238
 c0c:	a8 2e       	mov	r10, r24
 c0e:	05 c0       	rjmp	.+10     	; 0xc1a <vfprintf+0x2d4>
 c10:	b8 2c       	mov	r11, r8
 c12:	a3 2c       	mov	r10, r3
 c14:	03 c0       	rjmp	.+6      	; 0xc1c <vfprintf+0x2d6>
 c16:	b8 2c       	mov	r11, r8
 c18:	01 c0       	rjmp	.+2      	; 0xc1c <vfprintf+0x2d6>
 c1a:	b9 2c       	mov	r11, r9
 c1c:	a4 fe       	sbrs	r10, 4
 c1e:	0f c0       	rjmp	.+30     	; 0xc3e <vfprintf+0x2f8>
 c20:	fe 01       	movw	r30, r28
 c22:	e8 0d       	add	r30, r8
 c24:	f1 1d       	adc	r31, r1
 c26:	80 81       	ld	r24, Z
 c28:	80 33       	cpi	r24, 0x30	; 48
 c2a:	21 f4       	brne	.+8      	; 0xc34 <vfprintf+0x2ee>
 c2c:	9a 2d       	mov	r25, r10
 c2e:	99 7e       	andi	r25, 0xE9	; 233
 c30:	a9 2e       	mov	r10, r25
 c32:	09 c0       	rjmp	.+18     	; 0xc46 <vfprintf+0x300>
 c34:	a2 fe       	sbrs	r10, 2
 c36:	06 c0       	rjmp	.+12     	; 0xc44 <vfprintf+0x2fe>
 c38:	b3 94       	inc	r11
 c3a:	b3 94       	inc	r11
 c3c:	04 c0       	rjmp	.+8      	; 0xc46 <vfprintf+0x300>
 c3e:	8a 2d       	mov	r24, r10
 c40:	86 78       	andi	r24, 0x86	; 134
 c42:	09 f0       	breq	.+2      	; 0xc46 <vfprintf+0x300>
 c44:	b3 94       	inc	r11
 c46:	a3 fc       	sbrc	r10, 3
 c48:	11 c0       	rjmp	.+34     	; 0xc6c <vfprintf+0x326>
 c4a:	a0 fe       	sbrs	r10, 0
 c4c:	06 c0       	rjmp	.+12     	; 0xc5a <vfprintf+0x314>
 c4e:	b2 14       	cp	r11, r2
 c50:	88 f4       	brcc	.+34     	; 0xc74 <vfprintf+0x32e>
 c52:	28 0c       	add	r2, r8
 c54:	92 2c       	mov	r9, r2
 c56:	9b 18       	sub	r9, r11
 c58:	0e c0       	rjmp	.+28     	; 0xc76 <vfprintf+0x330>
 c5a:	b2 14       	cp	r11, r2
 c5c:	60 f4       	brcc	.+24     	; 0xc76 <vfprintf+0x330>
 c5e:	b6 01       	movw	r22, r12
 c60:	80 e2       	ldi	r24, 0x20	; 32
 c62:	90 e0       	ldi	r25, 0x00	; 0
 c64:	0e 94 9a 06 	call	0xd34	; 0xd34 <fputc>
 c68:	b3 94       	inc	r11
 c6a:	f7 cf       	rjmp	.-18     	; 0xc5a <vfprintf+0x314>
 c6c:	b2 14       	cp	r11, r2
 c6e:	18 f4       	brcc	.+6      	; 0xc76 <vfprintf+0x330>
 c70:	2b 18       	sub	r2, r11
 c72:	02 c0       	rjmp	.+4      	; 0xc78 <vfprintf+0x332>
 c74:	98 2c       	mov	r9, r8
 c76:	21 2c       	mov	r2, r1
 c78:	a4 fe       	sbrs	r10, 4
 c7a:	10 c0       	rjmp	.+32     	; 0xc9c <vfprintf+0x356>
 c7c:	b6 01       	movw	r22, r12
 c7e:	80 e3       	ldi	r24, 0x30	; 48
 c80:	90 e0       	ldi	r25, 0x00	; 0
 c82:	0e 94 9a 06 	call	0xd34	; 0xd34 <fputc>
 c86:	a2 fe       	sbrs	r10, 2
 c88:	17 c0       	rjmp	.+46     	; 0xcb8 <vfprintf+0x372>
 c8a:	a1 fc       	sbrc	r10, 1
 c8c:	03 c0       	rjmp	.+6      	; 0xc94 <vfprintf+0x34e>
 c8e:	88 e7       	ldi	r24, 0x78	; 120
 c90:	90 e0       	ldi	r25, 0x00	; 0
 c92:	02 c0       	rjmp	.+4      	; 0xc98 <vfprintf+0x352>
 c94:	88 e5       	ldi	r24, 0x58	; 88
 c96:	90 e0       	ldi	r25, 0x00	; 0
 c98:	b6 01       	movw	r22, r12
 c9a:	0c c0       	rjmp	.+24     	; 0xcb4 <vfprintf+0x36e>
 c9c:	8a 2d       	mov	r24, r10
 c9e:	86 78       	andi	r24, 0x86	; 134
 ca0:	59 f0       	breq	.+22     	; 0xcb8 <vfprintf+0x372>
 ca2:	a1 fe       	sbrs	r10, 1
 ca4:	02 c0       	rjmp	.+4      	; 0xcaa <vfprintf+0x364>
 ca6:	8b e2       	ldi	r24, 0x2B	; 43
 ca8:	01 c0       	rjmp	.+2      	; 0xcac <vfprintf+0x366>
 caa:	80 e2       	ldi	r24, 0x20	; 32
 cac:	a7 fc       	sbrc	r10, 7
 cae:	8d e2       	ldi	r24, 0x2D	; 45
 cb0:	b6 01       	movw	r22, r12
 cb2:	90 e0       	ldi	r25, 0x00	; 0
 cb4:	0e 94 9a 06 	call	0xd34	; 0xd34 <fputc>
 cb8:	89 14       	cp	r8, r9
 cba:	38 f4       	brcc	.+14     	; 0xcca <vfprintf+0x384>
 cbc:	b6 01       	movw	r22, r12
 cbe:	80 e3       	ldi	r24, 0x30	; 48
 cc0:	90 e0       	ldi	r25, 0x00	; 0
 cc2:	0e 94 9a 06 	call	0xd34	; 0xd34 <fputc>
 cc6:	9a 94       	dec	r9
 cc8:	f7 cf       	rjmp	.-18     	; 0xcb8 <vfprintf+0x372>
 cca:	8a 94       	dec	r8
 ccc:	f3 01       	movw	r30, r6
 cce:	e8 0d       	add	r30, r8
 cd0:	f1 1d       	adc	r31, r1
 cd2:	80 81       	ld	r24, Z
 cd4:	b6 01       	movw	r22, r12
 cd6:	90 e0       	ldi	r25, 0x00	; 0
 cd8:	0e 94 9a 06 	call	0xd34	; 0xd34 <fputc>
 cdc:	81 10       	cpse	r8, r1
 cde:	f5 cf       	rjmp	.-22     	; 0xcca <vfprintf+0x384>
 ce0:	22 20       	and	r2, r2
 ce2:	09 f4       	brne	.+2      	; 0xce6 <vfprintf+0x3a0>
 ce4:	42 ce       	rjmp	.-892    	; 0x96a <vfprintf+0x24>
 ce6:	b6 01       	movw	r22, r12
 ce8:	80 e2       	ldi	r24, 0x20	; 32
 cea:	90 e0       	ldi	r25, 0x00	; 0
 cec:	0e 94 9a 06 	call	0xd34	; 0xd34 <fputc>
 cf0:	2a 94       	dec	r2
 cf2:	f6 cf       	rjmp	.-20     	; 0xce0 <vfprintf+0x39a>
 cf4:	f6 01       	movw	r30, r12
 cf6:	86 81       	ldd	r24, Z+6	; 0x06
 cf8:	97 81       	ldd	r25, Z+7	; 0x07
 cfa:	02 c0       	rjmp	.+4      	; 0xd00 <vfprintf+0x3ba>
 cfc:	8f ef       	ldi	r24, 0xFF	; 255
 cfe:	9f ef       	ldi	r25, 0xFF	; 255
 d00:	2b 96       	adiw	r28, 0x0b	; 11
 d02:	e2 e1       	ldi	r30, 0x12	; 18
 d04:	0c 94 50 07 	jmp	0xea0	; 0xea0 <__epilogue_restores__>

00000d08 <strnlen_P>:
 d08:	fc 01       	movw	r30, r24
 d0a:	05 90       	lpm	r0, Z+
 d0c:	61 50       	subi	r22, 0x01	; 1
 d0e:	70 40       	sbci	r23, 0x00	; 0
 d10:	01 10       	cpse	r0, r1
 d12:	d8 f7       	brcc	.-10     	; 0xd0a <strnlen_P+0x2>
 d14:	80 95       	com	r24
 d16:	90 95       	com	r25
 d18:	8e 0f       	add	r24, r30
 d1a:	9f 1f       	adc	r25, r31
 d1c:	08 95       	ret

00000d1e <strnlen>:
 d1e:	fc 01       	movw	r30, r24
 d20:	61 50       	subi	r22, 0x01	; 1
 d22:	70 40       	sbci	r23, 0x00	; 0
 d24:	01 90       	ld	r0, Z+
 d26:	01 10       	cpse	r0, r1
 d28:	d8 f7       	brcc	.-10     	; 0xd20 <strnlen+0x2>
 d2a:	80 95       	com	r24
 d2c:	90 95       	com	r25
 d2e:	8e 0f       	add	r24, r30
 d30:	9f 1f       	adc	r25, r31
 d32:	08 95       	ret

00000d34 <fputc>:
 d34:	0f 93       	push	r16
 d36:	1f 93       	push	r17
 d38:	cf 93       	push	r28
 d3a:	df 93       	push	r29
 d3c:	fb 01       	movw	r30, r22
 d3e:	23 81       	ldd	r18, Z+3	; 0x03
 d40:	21 fd       	sbrc	r18, 1
 d42:	03 c0       	rjmp	.+6      	; 0xd4a <fputc+0x16>
 d44:	8f ef       	ldi	r24, 0xFF	; 255
 d46:	9f ef       	ldi	r25, 0xFF	; 255
 d48:	2c c0       	rjmp	.+88     	; 0xda2 <fputc+0x6e>
 d4a:	22 ff       	sbrs	r18, 2
 d4c:	16 c0       	rjmp	.+44     	; 0xd7a <fputc+0x46>
 d4e:	46 81       	ldd	r20, Z+6	; 0x06
 d50:	57 81       	ldd	r21, Z+7	; 0x07
 d52:	24 81       	ldd	r18, Z+4	; 0x04
 d54:	35 81       	ldd	r19, Z+5	; 0x05
 d56:	42 17       	cp	r20, r18
 d58:	53 07       	cpc	r21, r19
 d5a:	44 f4       	brge	.+16     	; 0xd6c <fputc+0x38>
 d5c:	a0 81       	ld	r26, Z
 d5e:	b1 81       	ldd	r27, Z+1	; 0x01
 d60:	9d 01       	movw	r18, r26
 d62:	2f 5f       	subi	r18, 0xFF	; 255
 d64:	3f 4f       	sbci	r19, 0xFF	; 255
 d66:	31 83       	std	Z+1, r19	; 0x01
 d68:	20 83       	st	Z, r18
 d6a:	8c 93       	st	X, r24
 d6c:	26 81       	ldd	r18, Z+6	; 0x06
 d6e:	37 81       	ldd	r19, Z+7	; 0x07
 d70:	2f 5f       	subi	r18, 0xFF	; 255
 d72:	3f 4f       	sbci	r19, 0xFF	; 255
 d74:	37 83       	std	Z+7, r19	; 0x07
 d76:	26 83       	std	Z+6, r18	; 0x06
 d78:	14 c0       	rjmp	.+40     	; 0xda2 <fputc+0x6e>
 d7a:	8b 01       	movw	r16, r22
 d7c:	ec 01       	movw	r28, r24
 d7e:	fb 01       	movw	r30, r22
 d80:	00 84       	ldd	r0, Z+8	; 0x08
 d82:	f1 85       	ldd	r31, Z+9	; 0x09
 d84:	e0 2d       	mov	r30, r0
 d86:	09 95       	icall
 d88:	89 2b       	or	r24, r25
 d8a:	e1 f6       	brne	.-72     	; 0xd44 <fputc+0x10>
 d8c:	d8 01       	movw	r26, r16
 d8e:	16 96       	adiw	r26, 0x06	; 6
 d90:	8d 91       	ld	r24, X+
 d92:	9c 91       	ld	r25, X
 d94:	17 97       	sbiw	r26, 0x07	; 7
 d96:	01 96       	adiw	r24, 0x01	; 1
 d98:	17 96       	adiw	r26, 0x07	; 7
 d9a:	9c 93       	st	X, r25
 d9c:	8e 93       	st	-X, r24
 d9e:	16 97       	sbiw	r26, 0x06	; 6
 da0:	ce 01       	movw	r24, r28
 da2:	df 91       	pop	r29
 da4:	cf 91       	pop	r28
 da6:	1f 91       	pop	r17
 da8:	0f 91       	pop	r16
 daa:	08 95       	ret

00000dac <__ultoa_invert>:
 dac:	fa 01       	movw	r30, r20
 dae:	aa 27       	eor	r26, r26
 db0:	28 30       	cpi	r18, 0x08	; 8
 db2:	51 f1       	breq	.+84     	; 0xe08 <__ultoa_invert+0x5c>
 db4:	20 31       	cpi	r18, 0x10	; 16
 db6:	81 f1       	breq	.+96     	; 0xe18 <__ultoa_invert+0x6c>
 db8:	e8 94       	clt
 dba:	6f 93       	push	r22
 dbc:	6e 7f       	andi	r22, 0xFE	; 254
 dbe:	6e 5f       	subi	r22, 0xFE	; 254
 dc0:	7f 4f       	sbci	r23, 0xFF	; 255
 dc2:	8f 4f       	sbci	r24, 0xFF	; 255
 dc4:	9f 4f       	sbci	r25, 0xFF	; 255
 dc6:	af 4f       	sbci	r26, 0xFF	; 255
 dc8:	b1 e0       	ldi	r27, 0x01	; 1
 dca:	3e d0       	rcall	.+124    	; 0xe48 <__ultoa_invert+0x9c>
 dcc:	b4 e0       	ldi	r27, 0x04	; 4
 dce:	3c d0       	rcall	.+120    	; 0xe48 <__ultoa_invert+0x9c>
 dd0:	67 0f       	add	r22, r23
 dd2:	78 1f       	adc	r23, r24
 dd4:	89 1f       	adc	r24, r25
 dd6:	9a 1f       	adc	r25, r26
 dd8:	a1 1d       	adc	r26, r1
 dda:	68 0f       	add	r22, r24
 ddc:	79 1f       	adc	r23, r25
 dde:	8a 1f       	adc	r24, r26
 de0:	91 1d       	adc	r25, r1
 de2:	a1 1d       	adc	r26, r1
 de4:	6a 0f       	add	r22, r26
 de6:	71 1d       	adc	r23, r1
 de8:	81 1d       	adc	r24, r1
 dea:	91 1d       	adc	r25, r1
 dec:	a1 1d       	adc	r26, r1
 dee:	20 d0       	rcall	.+64     	; 0xe30 <__ultoa_invert+0x84>
 df0:	09 f4       	brne	.+2      	; 0xdf4 <__ultoa_invert+0x48>
 df2:	68 94       	set
 df4:	3f 91       	pop	r19
 df6:	2a e0       	ldi	r18, 0x0A	; 10
 df8:	26 9f       	mul	r18, r22
 dfa:	11 24       	eor	r1, r1
 dfc:	30 19       	sub	r19, r0
 dfe:	30 5d       	subi	r19, 0xD0	; 208
 e00:	31 93       	st	Z+, r19
 e02:	de f6       	brtc	.-74     	; 0xdba <__ultoa_invert+0xe>
 e04:	cf 01       	movw	r24, r30
 e06:	08 95       	ret
 e08:	46 2f       	mov	r20, r22
 e0a:	47 70       	andi	r20, 0x07	; 7
 e0c:	40 5d       	subi	r20, 0xD0	; 208
 e0e:	41 93       	st	Z+, r20
 e10:	b3 e0       	ldi	r27, 0x03	; 3
 e12:	0f d0       	rcall	.+30     	; 0xe32 <__ultoa_invert+0x86>
 e14:	c9 f7       	brne	.-14     	; 0xe08 <__ultoa_invert+0x5c>
 e16:	f6 cf       	rjmp	.-20     	; 0xe04 <__ultoa_invert+0x58>
 e18:	46 2f       	mov	r20, r22
 e1a:	4f 70       	andi	r20, 0x0F	; 15
 e1c:	40 5d       	subi	r20, 0xD0	; 208
 e1e:	4a 33       	cpi	r20, 0x3A	; 58
 e20:	18 f0       	brcs	.+6      	; 0xe28 <__ultoa_invert+0x7c>
 e22:	49 5d       	subi	r20, 0xD9	; 217
 e24:	31 fd       	sbrc	r19, 1
 e26:	40 52       	subi	r20, 0x20	; 32
 e28:	41 93       	st	Z+, r20
 e2a:	02 d0       	rcall	.+4      	; 0xe30 <__ultoa_invert+0x84>
 e2c:	a9 f7       	brne	.-22     	; 0xe18 <__ultoa_invert+0x6c>
 e2e:	ea cf       	rjmp	.-44     	; 0xe04 <__ultoa_invert+0x58>
 e30:	b4 e0       	ldi	r27, 0x04	; 4
 e32:	a6 95       	lsr	r26
 e34:	97 95       	ror	r25
 e36:	87 95       	ror	r24
 e38:	77 95       	ror	r23
 e3a:	67 95       	ror	r22
 e3c:	ba 95       	dec	r27
 e3e:	c9 f7       	brne	.-14     	; 0xe32 <__ultoa_invert+0x86>
 e40:	00 97       	sbiw	r24, 0x00	; 0
 e42:	61 05       	cpc	r22, r1
 e44:	71 05       	cpc	r23, r1
 e46:	08 95       	ret
 e48:	9b 01       	movw	r18, r22
 e4a:	ac 01       	movw	r20, r24
 e4c:	0a 2e       	mov	r0, r26
 e4e:	06 94       	lsr	r0
 e50:	57 95       	ror	r21
 e52:	47 95       	ror	r20
 e54:	37 95       	ror	r19
 e56:	27 95       	ror	r18
 e58:	ba 95       	dec	r27
 e5a:	c9 f7       	brne	.-14     	; 0xe4e <__ultoa_invert+0xa2>
 e5c:	62 0f       	add	r22, r18
 e5e:	73 1f       	adc	r23, r19
 e60:	84 1f       	adc	r24, r20
 e62:	95 1f       	adc	r25, r21
 e64:	a0 1d       	adc	r26, r0
 e66:	08 95       	ret

00000e68 <__prologue_saves__>:
 e68:	2f 92       	push	r2
 e6a:	3f 92       	push	r3
 e6c:	4f 92       	push	r4
 e6e:	5f 92       	push	r5
 e70:	6f 92       	push	r6
 e72:	7f 92       	push	r7
 e74:	8f 92       	push	r8
 e76:	9f 92       	push	r9
 e78:	af 92       	push	r10
 e7a:	bf 92       	push	r11
 e7c:	cf 92       	push	r12
 e7e:	df 92       	push	r13
 e80:	ef 92       	push	r14
 e82:	ff 92       	push	r15
 e84:	0f 93       	push	r16
 e86:	1f 93       	push	r17
 e88:	cf 93       	push	r28
 e8a:	df 93       	push	r29
 e8c:	cd b7       	in	r28, 0x3d	; 61
 e8e:	de b7       	in	r29, 0x3e	; 62
 e90:	ca 1b       	sub	r28, r26
 e92:	db 0b       	sbc	r29, r27
 e94:	0f b6       	in	r0, 0x3f	; 63
 e96:	f8 94       	cli
 e98:	de bf       	out	0x3e, r29	; 62
 e9a:	0f be       	out	0x3f, r0	; 63
 e9c:	cd bf       	out	0x3d, r28	; 61
 e9e:	09 94       	ijmp

00000ea0 <__epilogue_restores__>:
 ea0:	2a 88       	ldd	r2, Y+18	; 0x12
 ea2:	39 88       	ldd	r3, Y+17	; 0x11
 ea4:	48 88       	ldd	r4, Y+16	; 0x10
 ea6:	5f 84       	ldd	r5, Y+15	; 0x0f
 ea8:	6e 84       	ldd	r6, Y+14	; 0x0e
 eaa:	7d 84       	ldd	r7, Y+13	; 0x0d
 eac:	8c 84       	ldd	r8, Y+12	; 0x0c
 eae:	9b 84       	ldd	r9, Y+11	; 0x0b
 eb0:	aa 84       	ldd	r10, Y+10	; 0x0a
 eb2:	b9 84       	ldd	r11, Y+9	; 0x09
 eb4:	c8 84       	ldd	r12, Y+8	; 0x08
 eb6:	df 80       	ldd	r13, Y+7	; 0x07
 eb8:	ee 80       	ldd	r14, Y+6	; 0x06
 eba:	fd 80       	ldd	r15, Y+5	; 0x05
 ebc:	0c 81       	ldd	r16, Y+4	; 0x04
 ebe:	1b 81       	ldd	r17, Y+3	; 0x03
 ec0:	aa 81       	ldd	r26, Y+2	; 0x02
 ec2:	b9 81       	ldd	r27, Y+1	; 0x01
 ec4:	ce 0f       	add	r28, r30
 ec6:	d1 1d       	adc	r29, r1
 ec8:	0f b6       	in	r0, 0x3f	; 63
 eca:	f8 94       	cli
 ecc:	de bf       	out	0x3e, r29	; 62
 ece:	0f be       	out	0x3f, r0	; 63
 ed0:	cd bf       	out	0x3d, r28	; 61
 ed2:	ed 01       	movw	r28, r26
 ed4:	08 95       	ret

00000ed6 <_exit>:
 ed6:	f8 94       	cli

00000ed8 <__stop_program>:
 ed8:	ff cf       	rjmp	.-2      	; 0xed8 <__stop_program>
